Grammar

    0 $accept: program $end

    1 program: %empty
    2        | functions

    3 functions: function
    4          | function functions

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    6 declarationsWsemi: %empty
    7                  | declaration SEMICOLON declarationsWsemi
    8                  | error SEMICOLON

    9 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | idents COLON INTEGER

   11 idents: IDENT COMMA idents
   12       | IDENT

   13 statementzWsemi: statement SEMICOLON statementzWsemi
   14                | statement SEMICOLON

   15 statement: var ASSIGN expression
   16          | IF boolExpression THEN statementzWsemi ENDIF
   17          | IF boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF
   18          | WHILE boolExpression BEGINLOOP statementzWsemi ENDLOOP
   19          | DO BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression
   20          | READ varzWcomma
   21          | WRITE varzWcomma
   22          | CONTINUE
   23          | RETURN expression

   24 boolExpression: relationAndExpression
   25               | relationAndExpression OR boolExpression

   26 relationAndExpression: relationExpression
   27                      | relationExpression AND relationAndExpression

   28 relationExpression: expression comp expression
   29                   | NOT expression comp expression
   30                   | TRUE
   31                   | NOT TRUE
   32                   | FALSE
   33                   | NOT FALSE
   34                   | L_PAREN boolExpression R_PAREN
   35                   | NOT L_PAREN boolExpression R_PAREN

   36 comp: EQ
   37     | NEQ
   38     | LT
   39     | GT
   40     | LTE
   41     | GTE

   42 expressionzWcomma: %empty
   43                  | expression
   44                  | expression expressionCommaChain

   45 expressionCommaChain: COMMA expression expressionCommaChain
   46                     | COMMA expression

   47 expression: multiplicativeExpression
   48           | multiplicativeExpression ADD expression
   49           | multiplicativeExpression SUB expression

   50 multiplicativeExpression: term
   51                         | term MOD multiplicativeExpression
   52                         | term DIV multiplicativeExpression
   53                         | term MULT multiplicativeExpression

   54 term: var
   55     | SUB var
   56     | NUMBER
   57     | SUB NUMBER
   58     | L_PAREN expression R_PAREN
   59     | SUB L_PAREN expression R_PAREN
   60     | IDENT L_PAREN expressionzWcomma R_PAREN

   61 varzWcomma: var COMMA varzWcomma
   62           | var

   63 var: IDENT
   64    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256) 8
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_LOCALS (261) 5
END_LOCALS (262) 5
BEGIN_BODY (263) 5
END_BODY (264) 5
INTEGER (265) 9 10
ARRAY (266) 9
OF (267) 9
IF (268) 16 17
THEN (269) 16 17
ENDIF (270) 16 17
ELSE (271) 17
WHILE (272) 18 19
DO (273) 19
BEGINLOOP (274) 18 19
ENDLOOP (275) 18 19
CONTINUE (276) 22
READ (277) 20
WRITE (278) 21
AND (279) 27
OR (280) 25
NOT (281) 29 31 33 35
TRUE (282) 30 31
FALSE (283) 32 33
RETURN (284) 23
SUB (285) 49 55 57 59
ADD (286) 48
MULT (287) 53
DIV (288) 52
MOD (289) 51
EQ (290) 36
NEQ (291) 37
LT (292) 38
GT (293) 39
LTE (294) 40
GTE (295) 41
IDENT (296) 5 11 12 60 63 64
NUMBER (297) 9 56 57
SEMICOLON (298) 5 7 8 13 14
COLON (299) 9 10
COMMA (300) 11 45 46 61
L_PAREN (301) 34 35 58 59 60
R_PAREN (302) 34 35 58 59 60
L_SQUARE_BRACKET (303) 9 64
R_SQUARE_BRACKET (304) 9 64
ASSIGN (305) 15
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0
functions (54)
    on left: 3 4, on right: 2 4
function (55)
    on left: 5, on right: 3 4
declarationsWsemi (56)
    on left: 6 7 8, on right: 5 7
declaration (57)
    on left: 9 10, on right: 7
idents (58)
    on left: 11 12, on right: 9 10 11
statementzWsemi (59)
    on left: 13 14, on right: 5 13 16 17 18 19
statement (60)
    on left: 15 16 17 18 19 20 21 22 23, on right: 13 14
boolExpression (61)
    on left: 24 25, on right: 16 17 18 19 25 34 35
relationAndExpression (62)
    on left: 26 27, on right: 24 25 27
relationExpression (63)
    on left: 28 29 30 31 32 33 34 35, on right: 26 27
comp (64)
    on left: 36 37 38 39 40 41, on right: 28 29
expressionzWcomma (65)
    on left: 42 43 44, on right: 60
expressionCommaChain (66)
    on left: 45 46, on right: 44 45
expression (67)
    on left: 47 48 49, on right: 15 23 28 29 43 44 45 46 48 49 58 59
    64
multiplicativeExpression (68)
    on left: 50 51 52 53, on right: 47 48 49 51 52 53
term (69)
    on left: 54 55 56 57 58 59 60, on right: 50 51 52 53
varzWcomma (70)
    on left: 61 62, on right: 20 21 61
var (71)
    on left: 63 64, on right: 15 54 55 61 62


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    5 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: functions .

    $default  reduce using rule 2 (program)


State 4

    3 functions: function .
    4          | function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    5 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 8

    5 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 12
    declaration        go to state 13
    idents             go to state 14


State 10

    8 declarationsWsemi: error . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 11

   11 idents: IDENT . COMMA idents
   12       | IDENT .

    COMMA  shift, and go to state 16

    $default  reduce using rule 12 (idents)


State 12

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi . END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_PARAMS  shift, and go to state 17


State 13

    7 declarationsWsemi: declaration . SEMICOLON declarationsWsemi

    SEMICOLON  shift, and go to state 18


State 14

    9 declaration: idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | idents . COLON INTEGER

    COLON  shift, and go to state 19


State 15

    8 declarationsWsemi: error SEMICOLON .

    $default  reduce using rule 8 (declarationsWsemi)


State 16

   11 idents: IDENT COMMA . idents

    IDENT  shift, and go to state 11

    idents  go to state 20


State 17

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS . BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 18

    7 declarationsWsemi: declaration SEMICOLON . declarationsWsemi

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 6 (declarationsWsemi)
    END_LOCALS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 22
    declaration        go to state 13
    idents             go to state 14


State 19

    9 declaration: idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | idents COLON . INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   11 idents: IDENT COMMA idents .

    $default  reduce using rule 11 (idents)


State 21

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS . declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_LOCALS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 25
    declaration        go to state 13
    idents             go to state 14


State 22

    7 declarationsWsemi: declaration SEMICOLON declarationsWsemi .

    $default  reduce using rule 7 (declarationsWsemi)


State 23

   10 declaration: idents COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 24

    9 declaration: idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 25

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi . END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_LOCALS  shift, and go to state 27


State 26

    9 declaration: idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS . BEGIN_BODY statementzWsemi END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

    9 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY . statementzWsemi END_BODY

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statementzWsemi  go to state 39
    statement        go to state 40
    var              go to state 41


State 30

    9 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 31

   16 statement: IF . boolExpression THEN statementzWsemi ENDIF
   17          | IF . boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 49

    boolExpression            go to state 50
    relationAndExpression     go to state 51
    relationExpression        go to state 52
    expression                go to state 53
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 32

   18 statement: WHILE . boolExpression BEGINLOOP statementzWsemi ENDLOOP

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 49

    boolExpression            go to state 57
    relationAndExpression     go to state 51
    relationExpression        go to state 52
    expression                go to state 53
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 33

   19 statement: DO . BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression

    BEGINLOOP  shift, and go to state 58


State 34

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 35

   20 statement: READ . varzWcomma

    IDENT  shift, and go to state 38

    varzWcomma  go to state 59
    var         go to state 60


State 36

   21 statement: WRITE . varzWcomma

    IDENT  shift, and go to state 38

    varzWcomma  go to state 61
    var         go to state 60


State 37

   23 statement: RETURN . expression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 63
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 38

   63 var: IDENT .
   64    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 63 (var)


State 39

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi . END_BODY

    END_BODY  shift, and go to state 65


State 40

   13 statementzWsemi: statement . SEMICOLON statementzWsemi
   14                | statement . SEMICOLON

    SEMICOLON  shift, and go to state 66


State 41

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 67


State 42

    9 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 68


State 43

   29 relationExpression: NOT . expression comp expression
   31                   | NOT . TRUE
   33                   | NOT . FALSE
   35                   | NOT . L_PAREN boolExpression R_PAREN

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 71

    expression                go to state 72
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 44

   30 relationExpression: TRUE .

    $default  reduce using rule 30 (relationExpression)


State 45

   32 relationExpression: FALSE .

    $default  reduce using rule 32 (relationExpression)


State 46

   55 term: SUB . var
   57     | SUB . NUMBER
   59     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 38
    NUMBER   shift, and go to state 73
    L_PAREN  shift, and go to state 74

    var  go to state 75


State 47

   60 term: IDENT . L_PAREN expressionzWcomma R_PAREN
   63 var: IDENT .
   64    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 76
    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 63 (var)


State 48

   56 term: NUMBER .

    $default  reduce using rule 56 (term)


State 49

   34 relationExpression: L_PAREN . boolExpression R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 49

    boolExpression            go to state 77
    relationAndExpression     go to state 51
    relationExpression        go to state 52
    expression                go to state 78
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 50

   16 statement: IF boolExpression . THEN statementzWsemi ENDIF
   17          | IF boolExpression . THEN statementzWsemi ELSE statementzWsemi ENDIF

    THEN  shift, and go to state 79


State 51

   24 boolExpression: relationAndExpression .
   25               | relationAndExpression . OR boolExpression

    OR  shift, and go to state 80

    $default  reduce using rule 24 (boolExpression)


State 52

   26 relationAndExpression: relationExpression .
   27                      | relationExpression . AND relationAndExpression

    AND  shift, and go to state 81

    $default  reduce using rule 26 (relationAndExpression)


State 53

   28 relationExpression: expression . comp expression

    EQ   shift, and go to state 82
    NEQ  shift, and go to state 83
    LT   shift, and go to state 84
    GT   shift, and go to state 85
    LTE  shift, and go to state 86
    GTE  shift, and go to state 87

    comp  go to state 88


State 54

   47 expression: multiplicativeExpression .
   48           | multiplicativeExpression . ADD expression
   49           | multiplicativeExpression . SUB expression

    SUB  shift, and go to state 89
    ADD  shift, and go to state 90

    $default  reduce using rule 47 (expression)


State 55

   50 multiplicativeExpression: term .
   51                         | term . MOD multiplicativeExpression
   52                         | term . DIV multiplicativeExpression
   53                         | term . MULT multiplicativeExpression

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 50 (multiplicativeExpression)


State 56

   54 term: var .

    $default  reduce using rule 54 (term)


State 57

   18 statement: WHILE boolExpression . BEGINLOOP statementzWsemi ENDLOOP

    BEGINLOOP  shift, and go to state 94


State 58

   19 statement: DO BEGINLOOP . statementzWsemi ENDLOOP WHILE boolExpression

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statementzWsemi  go to state 95
    statement        go to state 40
    var              go to state 41


State 59

   20 statement: READ varzWcomma .

    $default  reduce using rule 20 (statement)


State 60

   61 varzWcomma: var . COMMA varzWcomma
   62           | var .

    COMMA  shift, and go to state 96

    $default  reduce using rule 62 (varzWcomma)


State 61

   21 statement: WRITE varzWcomma .

    $default  reduce using rule 21 (statement)


State 62

   58 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 97
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 63

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 64

   64 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 98
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 65

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY .

    $default  reduce using rule 5 (function)


State 66

   13 statementzWsemi: statement SEMICOLON . statementzWsemi
   14                | statement SEMICOLON .

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 14 (statementzWsemi)

    statementzWsemi  go to state 99
    statement        go to state 40
    var              go to state 41


State 67

   15 statement: var ASSIGN . expression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 100
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 68

    9 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 69

   31 relationExpression: NOT TRUE .

    $default  reduce using rule 31 (relationExpression)


State 70

   33 relationExpression: NOT FALSE .

    $default  reduce using rule 33 (relationExpression)


State 71

   35 relationExpression: NOT L_PAREN . boolExpression R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 49

    boolExpression            go to state 101
    relationAndExpression     go to state 51
    relationExpression        go to state 52
    expression                go to state 78
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 72

   29 relationExpression: NOT expression . comp expression

    EQ   shift, and go to state 82
    NEQ  shift, and go to state 83
    LT   shift, and go to state 84
    GT   shift, and go to state 85
    LTE  shift, and go to state 86
    GTE  shift, and go to state 87

    comp  go to state 102


State 73

   57 term: SUB NUMBER .

    $default  reduce using rule 57 (term)


State 74

   59 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 103
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 75

   55 term: SUB var .

    $default  reduce using rule 55 (term)


State 76

   60 term: IDENT L_PAREN . expressionzWcomma R_PAREN

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    $default  reduce using rule 42 (expressionzWcomma)

    expressionzWcomma         go to state 104
    expression                go to state 105
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 77

   34 relationExpression: L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 106


State 78

   28 relationExpression: expression . comp expression
   58 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 82
    NEQ      shift, and go to state 83
    LT       shift, and go to state 84
    GT       shift, and go to state 85
    LTE      shift, and go to state 86
    GTE      shift, and go to state 87
    R_PAREN  shift, and go to state 107

    comp  go to state 88


State 79

   16 statement: IF boolExpression THEN . statementzWsemi ENDIF
   17          | IF boolExpression THEN . statementzWsemi ELSE statementzWsemi ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statementzWsemi  go to state 108
    statement        go to state 40
    var              go to state 41


State 80

   25 boolExpression: relationAndExpression OR . boolExpression

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 49

    boolExpression            go to state 109
    relationAndExpression     go to state 51
    relationExpression        go to state 52
    expression                go to state 53
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 81

   27 relationAndExpression: relationExpression AND . relationAndExpression

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 49

    relationAndExpression     go to state 110
    relationExpression        go to state 52
    expression                go to state 53
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 82

   36 comp: EQ .

    $default  reduce using rule 36 (comp)


State 83

   37 comp: NEQ .

    $default  reduce using rule 37 (comp)


State 84

   38 comp: LT .

    $default  reduce using rule 38 (comp)


State 85

   39 comp: GT .

    $default  reduce using rule 39 (comp)


State 86

   40 comp: LTE .

    $default  reduce using rule 40 (comp)


State 87

   41 comp: GTE .

    $default  reduce using rule 41 (comp)


State 88

   28 relationExpression: expression comp . expression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 111
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 89

   49 expression: multiplicativeExpression SUB . expression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 112
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 90

   48 expression: multiplicativeExpression ADD . expression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 113
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 91

   53 multiplicativeExpression: term MULT . multiplicativeExpression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    multiplicativeExpression  go to state 114
    term                      go to state 55
    var                       go to state 56


State 92

   52 multiplicativeExpression: term DIV . multiplicativeExpression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    multiplicativeExpression  go to state 115
    term                      go to state 55
    var                       go to state 56


State 93

   51 multiplicativeExpression: term MOD . multiplicativeExpression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    multiplicativeExpression  go to state 116
    term                      go to state 55
    var                       go to state 56


State 94

   18 statement: WHILE boolExpression BEGINLOOP . statementzWsemi ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statementzWsemi  go to state 117
    statement        go to state 40
    var              go to state 41


State 95

   19 statement: DO BEGINLOOP statementzWsemi . ENDLOOP WHILE boolExpression

    ENDLOOP  shift, and go to state 118


State 96

   61 varzWcomma: var COMMA . varzWcomma

    IDENT  shift, and go to state 38

    varzWcomma  go to state 119
    var         go to state 60


State 97

   58 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 107


State 98

   64 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 120


State 99

   13 statementzWsemi: statement SEMICOLON statementzWsemi .

    $default  reduce using rule 13 (statementzWsemi)


State 100

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 101

   35 relationExpression: NOT L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 121


State 102

   29 relationExpression: NOT expression comp . expression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 122
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 103

   59 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 123


State 104

   60 term: IDENT L_PAREN expressionzWcomma . R_PAREN

    R_PAREN  shift, and go to state 124


State 105

   43 expressionzWcomma: expression .
   44                  | expression . expressionCommaChain

    COMMA  shift, and go to state 125

    $default  reduce using rule 43 (expressionzWcomma)

    expressionCommaChain  go to state 126


State 106

   34 relationExpression: L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 34 (relationExpression)


State 107

   58 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 108

   16 statement: IF boolExpression THEN statementzWsemi . ENDIF
   17          | IF boolExpression THEN statementzWsemi . ELSE statementzWsemi ENDIF

    ENDIF  shift, and go to state 127
    ELSE   shift, and go to state 128


State 109

   25 boolExpression: relationAndExpression OR boolExpression .

    $default  reduce using rule 25 (boolExpression)


State 110

   27 relationAndExpression: relationExpression AND relationAndExpression .

    $default  reduce using rule 27 (relationAndExpression)


State 111

   28 relationExpression: expression comp expression .

    $default  reduce using rule 28 (relationExpression)


State 112

   49 expression: multiplicativeExpression SUB expression .

    $default  reduce using rule 49 (expression)


State 113

   48 expression: multiplicativeExpression ADD expression .

    $default  reduce using rule 48 (expression)


State 114

   53 multiplicativeExpression: term MULT multiplicativeExpression .

    $default  reduce using rule 53 (multiplicativeExpression)


State 115

   52 multiplicativeExpression: term DIV multiplicativeExpression .

    $default  reduce using rule 52 (multiplicativeExpression)


State 116

   51 multiplicativeExpression: term MOD multiplicativeExpression .

    $default  reduce using rule 51 (multiplicativeExpression)


State 117

   18 statement: WHILE boolExpression BEGINLOOP statementzWsemi . ENDLOOP

    ENDLOOP  shift, and go to state 129


State 118

   19 statement: DO BEGINLOOP statementzWsemi ENDLOOP . WHILE boolExpression

    WHILE  shift, and go to state 130


State 119

   61 varzWcomma: var COMMA varzWcomma .

    $default  reduce using rule 61 (varzWcomma)


State 120

   64 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (var)


State 121

   35 relationExpression: NOT L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 35 (relationExpression)


State 122

   29 relationExpression: NOT expression comp expression .

    $default  reduce using rule 29 (relationExpression)


State 123

   59 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term)


State 124

   60 term: IDENT L_PAREN expressionzWcomma R_PAREN .

    $default  reduce using rule 60 (term)


State 125

   45 expressionCommaChain: COMMA . expression expressionCommaChain
   46                     | COMMA . expression

    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 62

    expression                go to state 131
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 126

   44 expressionzWcomma: expression expressionCommaChain .

    $default  reduce using rule 44 (expressionzWcomma)


State 127

   16 statement: IF boolExpression THEN statementzWsemi ENDIF .

    $default  reduce using rule 16 (statement)


State 128

   17 statement: IF boolExpression THEN statementzWsemi ELSE . statementzWsemi ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statementzWsemi  go to state 132
    statement        go to state 40
    var              go to state 41


State 129

   18 statement: WHILE boolExpression BEGINLOOP statementzWsemi ENDLOOP .

    $default  reduce using rule 18 (statement)


State 130

   19 statement: DO BEGINLOOP statementzWsemi ENDLOOP WHILE . boolExpression

    NOT      shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    SUB      shift, and go to state 46
    IDENT    shift, and go to state 47
    NUMBER   shift, and go to state 48
    L_PAREN  shift, and go to state 49

    boolExpression            go to state 133
    relationAndExpression     go to state 51
    relationExpression        go to state 52
    expression                go to state 53
    multiplicativeExpression  go to state 54
    term                      go to state 55
    var                       go to state 56


State 131

   45 expressionCommaChain: COMMA expression . expressionCommaChain
   46                     | COMMA expression .

    COMMA  shift, and go to state 125

    $default  reduce using rule 46 (expressionCommaChain)

    expressionCommaChain  go to state 134


State 132

   17 statement: IF boolExpression THEN statementzWsemi ELSE statementzWsemi . ENDIF

    ENDIF  shift, and go to state 135


State 133

   19 statement: DO BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression .

    $default  reduce using rule 19 (statement)


State 134

   45 expressionCommaChain: COMMA expression expressionCommaChain .

    $default  reduce using rule 45 (expressionCommaChain)


State 135

   17 statement: IF boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF .

    $default  reduce using rule 17 (statement)
