Terminals unused in grammar

   SUB
   ADD


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | functions

    3 functions: function
    4          | function functions

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    6 declarationsWsemi: %empty
    7                  | declaration SEMICOLON declarationsWsemi

    8 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | idents COLON INTEGER

   10 idents: IDENT COMMA idents
   11       | IDENT

   12 statementzWsemi: statement SEMICOLON statementzWsemi
   13                | statement SEMICOLON

   14 statement: var ASSIGN expression
   15          | IF boolExpression THEN statementzWsemi ENDIF
   16          | IF boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF
   17          | WHILE boolExpression BEGINLOOP statementzWsemi ENDLOOP
   18          | DO BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression
   19          | READ varzWcomma
   20          | WRITE varzWcomma
   21          | CONTINUE
   22          | RETURN expression

   23 boolExpression: relationAndExpression
   24               | relationAndExpression OR boolExpression

   25 relationAndExpression: relationExpression
   26                      | relationExpression AND relationAndExpression

   27 relationExpression: expression comp expression
   28                   | NOT expression comp expression
   29                   | TRUE
   30                   | NOT TRUE
   31                   | FALSE
   32                   | NOT FALSE
   33                   | L_PAREN boolExpression R_PAREN
   34                   | NOT L_PAREN boolExpression R_PAREN

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 expressionzWcomma: %empty
   42                  | expression
   43                  | expression expressionCommaChain

   44 expressionCommaChain: COMMA expression expressionCommaChain
   45                     | COMMA expression

   46 expression: multiplicativeExpression
   47           | multiplicativeExpression PLUS expression
   48           | multiplicativeExpression MINUS expression

   49 multiplicativeExpression: term
   50                         | term MOD multiplicativeExpression
   51                         | term DIV multiplicativeExpression
   52                         | term MULT multiplicativeExpression

   53 term: var
   54     | MINUS var
   55     | NUMBER
   56     | MINUS NUMBER
   57     | L_PAREN expression R_PAREN
   58     | MINUS L_PAREN expression R_PAREN
   59     | IDENT L_PAREN expressionzWcomma R_PAREN

   60 varzWcomma: var COMMA varzWcomma
   61           | var

   62 var: IDENT
   63    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_LOCALS (261) 5
END_LOCALS (262) 5
BEGIN_BODY (263) 5
END_BODY (264) 5
INTEGER (265) 8 9
ARRAY (266) 8
OF (267) 8
IF (268) 15 16
THEN (269) 15 16
ENDIF (270) 15 16
ELSE (271) 16
WHILE (272) 17 18
DO (273) 18
BEGINLOOP (274) 17 18
ENDLOOP (275) 17 18
CONTINUE (276) 21
READ (277) 19
WRITE (278) 20
AND (279) 26
OR (280) 24
NOT (281) 28 30 32 34
TRUE (282) 29 30
FALSE (283) 31 32
RETURN (284) 22
SUB (285)
ADD (286)
MULT (287) 52
DIV (288) 51
MOD (289) 50
EQ (290) 35
NEQ (291) 36
LT (292) 37
GT (293) 38
LTE (294) 39
GTE (295) 40
IDENT (296) 5 10 11 59 62 63
NUMBER (297) 8 55 56
SEMICOLON (298) 5 7 12 13
COLON (299) 8 9
COMMA (300) 10 44 45 60
L_PAREN (301) 33 34 57 58 59
R_PAREN (302) 33 34 57 58 59
L_SQUARE_BRACKET (303) 8 63
R_SQUARE_BRACKET (304) 8 63
ASSIGN (305) 14
PLUS (306) 47
MINUS (307) 48 54 56 58
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0
functions (56)
    on left: 3 4, on right: 2 4
function (57)
    on left: 5, on right: 3 4
declarationsWsemi (58)
    on left: 6 7, on right: 5 7
declaration (59)
    on left: 8 9, on right: 7
idents (60)
    on left: 10 11, on right: 8 9 10
statementzWsemi (61)
    on left: 12 13, on right: 5 12 15 16 17 18
statement (62)
    on left: 14 15 16 17 18 19 20 21 22, on right: 12 13
boolExpression (63)
    on left: 23 24, on right: 15 16 17 18 24 33 34
relationAndExpression (64)
    on left: 25 26, on right: 23 24 26
relationExpression (65)
    on left: 27 28 29 30 31 32 33 34, on right: 25 26
comp (66)
    on left: 35 36 37 38 39 40, on right: 27 28
expressionzWcomma (67)
    on left: 41 42 43, on right: 59
expressionCommaChain (68)
    on left: 44 45, on right: 43 44
expression (69)
    on left: 46 47 48, on right: 14 22 27 28 42 43 44 45 47 48 57 58
    63
multiplicativeExpression (70)
    on left: 49 50 51 52, on right: 46 47 48 50 51 52
term (71)
    on left: 53 54 55 56 57 58 59, on right: 49 50 51 52
varzWcomma (72)
    on left: 60 61, on right: 19 20 60
var (73)
    on left: 62 63, on right: 14 53 54 60 61


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    5 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: functions .

    $default  reduce using rule 2 (program)


State 4

    3 functions: function .
    4          | function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    5 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 8

    5 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 11
    declaration        go to state 12
    idents             go to state 13


State 10

   10 idents: IDENT . COMMA idents
   11       | IDENT .

    COMMA  shift, and go to state 14

    $default  reduce using rule 11 (idents)


State 11

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi . END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    7 declarationsWsemi: declaration . SEMICOLON declarationsWsemi

    SEMICOLON  shift, and go to state 16


State 13

    8 declaration: idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | idents . COLON INTEGER

    COLON  shift, and go to state 17


State 14

   10 idents: IDENT COMMA . idents

    IDENT  shift, and go to state 10

    idents  go to state 18


State 15

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS . BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    7 declarationsWsemi: declaration SEMICOLON . declarationsWsemi

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 20
    declaration        go to state 12
    idents             go to state 13


State 17

    8 declaration: idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | idents COLON . INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   10 idents: IDENT COMMA idents .

    $default  reduce using rule 10 (idents)


State 19

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS . declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 23
    declaration        go to state 12
    idents             go to state 13


State 20

    7 declarationsWsemi: declaration SEMICOLON declarationsWsemi .

    $default  reduce using rule 7 (declarationsWsemi)


State 21

    9 declaration: idents COLON INTEGER .

    $default  reduce using rule 9 (declaration)


State 22

    8 declaration: idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 23

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi . END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    8 declaration: idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS . BEGIN_BODY statementzWsemi END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    8 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY . statementzWsemi END_BODY

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    statementzWsemi  go to state 37
    statement        go to state 38
    var              go to state 39


State 28

    8 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 40


State 29

   15 statement: IF . boolExpression THEN statementzWsemi ENDIF
   16          | IF . boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    boolExpression            go to state 48
    relationAndExpression     go to state 49
    relationExpression        go to state 50
    expression                go to state 51
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 30

   17 statement: WHILE . boolExpression BEGINLOOP statementzWsemi ENDLOOP

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    boolExpression            go to state 55
    relationAndExpression     go to state 49
    relationExpression        go to state 50
    expression                go to state 51
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 31

   18 statement: DO . BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression

    BEGINLOOP  shift, and go to state 56


State 32

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 33

   19 statement: READ . varzWcomma

    IDENT  shift, and go to state 36

    varzWcomma  go to state 57
    var         go to state 58


State 34

   20 statement: WRITE . varzWcomma

    IDENT  shift, and go to state 36

    varzWcomma  go to state 59
    var         go to state 58


State 35

   22 statement: RETURN . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 61
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 36

   62 var: IDENT .
   63    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 62

    $default  reduce using rule 62 (var)


State 37

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi . END_BODY

    END_BODY  shift, and go to state 63


State 38

   12 statementzWsemi: statement . SEMICOLON statementzWsemi
   13                | statement . SEMICOLON

    SEMICOLON  shift, and go to state 64


State 39

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 65


State 40

    8 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 66


State 41

   28 relationExpression: NOT . expression comp expression
   30                   | NOT . TRUE
   32                   | NOT . FALSE
   34                   | NOT . L_PAREN boolExpression R_PAREN

    TRUE     shift, and go to state 67
    FALSE    shift, and go to state 68
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 69
    MINUS    shift, and go to state 47

    expression                go to state 70
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 42

   29 relationExpression: TRUE .

    $default  reduce using rule 29 (relationExpression)


State 43

   31 relationExpression: FALSE .

    $default  reduce using rule 31 (relationExpression)


State 44

   59 term: IDENT . L_PAREN expressionzWcomma R_PAREN
   62 var: IDENT .
   63    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 71
    L_SQUARE_BRACKET  shift, and go to state 62

    $default  reduce using rule 62 (var)


State 45

   55 term: NUMBER .

    $default  reduce using rule 55 (term)


State 46

   33 relationExpression: L_PAREN . boolExpression R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    boolExpression            go to state 72
    relationAndExpression     go to state 49
    relationExpression        go to state 50
    expression                go to state 73
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 47

   54 term: MINUS . var
   56     | MINUS . NUMBER
   58     | MINUS . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 36
    NUMBER   shift, and go to state 74
    L_PAREN  shift, and go to state 75

    var  go to state 76


State 48

   15 statement: IF boolExpression . THEN statementzWsemi ENDIF
   16          | IF boolExpression . THEN statementzWsemi ELSE statementzWsemi ENDIF

    THEN  shift, and go to state 77


State 49

   23 boolExpression: relationAndExpression .
   24               | relationAndExpression . OR boolExpression

    OR  shift, and go to state 78

    $default  reduce using rule 23 (boolExpression)


State 50

   25 relationAndExpression: relationExpression .
   26                      | relationExpression . AND relationAndExpression

    AND  shift, and go to state 79

    $default  reduce using rule 25 (relationAndExpression)


State 51

   27 relationExpression: expression . comp expression

    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 86


State 52

   46 expression: multiplicativeExpression .
   47           | multiplicativeExpression . PLUS expression
   48           | multiplicativeExpression . MINUS expression

    PLUS   shift, and go to state 87
    MINUS  shift, and go to state 88

    $default  reduce using rule 46 (expression)


State 53

   49 multiplicativeExpression: term .
   50                         | term . MOD multiplicativeExpression
   51                         | term . DIV multiplicativeExpression
   52                         | term . MULT multiplicativeExpression

    MULT  shift, and go to state 89
    DIV   shift, and go to state 90
    MOD   shift, and go to state 91

    $default  reduce using rule 49 (multiplicativeExpression)


State 54

   53 term: var .

    $default  reduce using rule 53 (term)


State 55

   17 statement: WHILE boolExpression . BEGINLOOP statementzWsemi ENDLOOP

    BEGINLOOP  shift, and go to state 92


State 56

   18 statement: DO BEGINLOOP . statementzWsemi ENDLOOP WHILE boolExpression

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    statementzWsemi  go to state 93
    statement        go to state 38
    var              go to state 39


State 57

   19 statement: READ varzWcomma .

    $default  reduce using rule 19 (statement)


State 58

   60 varzWcomma: var . COMMA varzWcomma
   61           | var .

    COMMA  shift, and go to state 94

    $default  reduce using rule 61 (varzWcomma)


State 59

   20 statement: WRITE varzWcomma .

    $default  reduce using rule 20 (statement)


State 60

   57 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 95
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 61

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 62

   63 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 96
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 63

    5 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY .

    $default  reduce using rule 5 (function)


State 64

   12 statementzWsemi: statement SEMICOLON . statementzWsemi
   13                | statement SEMICOLON .

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    $default  reduce using rule 13 (statementzWsemi)

    statementzWsemi  go to state 97
    statement        go to state 38
    var              go to state 39


State 65

   14 statement: var ASSIGN . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 98
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 66

    8 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 67

   30 relationExpression: NOT TRUE .

    $default  reduce using rule 30 (relationExpression)


State 68

   32 relationExpression: NOT FALSE .

    $default  reduce using rule 32 (relationExpression)


State 69

   34 relationExpression: NOT L_PAREN . boolExpression R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    boolExpression            go to state 99
    relationAndExpression     go to state 49
    relationExpression        go to state 50
    expression                go to state 73
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 70

   28 relationExpression: NOT expression . comp expression

    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 100


State 71

   59 term: IDENT L_PAREN . expressionzWcomma R_PAREN

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    $default  reduce using rule 41 (expressionzWcomma)

    expressionzWcomma         go to state 101
    expression                go to state 102
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 72

   33 relationExpression: L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 103


State 73

   27 relationExpression: expression . comp expression
   57 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 80
    NEQ      shift, and go to state 81
    LT       shift, and go to state 82
    GT       shift, and go to state 83
    LTE      shift, and go to state 84
    GTE      shift, and go to state 85
    R_PAREN  shift, and go to state 104

    comp  go to state 86


State 74

   56 term: MINUS NUMBER .

    $default  reduce using rule 56 (term)


State 75

   58 term: MINUS L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 105
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 76

   54 term: MINUS var .

    $default  reduce using rule 54 (term)


State 77

   15 statement: IF boolExpression THEN . statementzWsemi ENDIF
   16          | IF boolExpression THEN . statementzWsemi ELSE statementzWsemi ENDIF

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    statementzWsemi  go to state 106
    statement        go to state 38
    var              go to state 39


State 78

   24 boolExpression: relationAndExpression OR . boolExpression

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    boolExpression            go to state 107
    relationAndExpression     go to state 49
    relationExpression        go to state 50
    expression                go to state 51
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 79

   26 relationAndExpression: relationExpression AND . relationAndExpression

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    relationAndExpression     go to state 108
    relationExpression        go to state 50
    expression                go to state 51
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 80

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 81

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 82

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 83

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 84

   39 comp: LTE .

    $default  reduce using rule 39 (comp)


State 85

   40 comp: GTE .

    $default  reduce using rule 40 (comp)


State 86

   27 relationExpression: expression comp . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 109
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 87

   47 expression: multiplicativeExpression PLUS . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 110
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 88

   48 expression: multiplicativeExpression MINUS . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 111
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 89

   52 multiplicativeExpression: term MULT . multiplicativeExpression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    multiplicativeExpression  go to state 112
    term                      go to state 53
    var                       go to state 54


State 90

   51 multiplicativeExpression: term DIV . multiplicativeExpression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    multiplicativeExpression  go to state 113
    term                      go to state 53
    var                       go to state 54


State 91

   50 multiplicativeExpression: term MOD . multiplicativeExpression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    multiplicativeExpression  go to state 114
    term                      go to state 53
    var                       go to state 54


State 92

   17 statement: WHILE boolExpression BEGINLOOP . statementzWsemi ENDLOOP

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    statementzWsemi  go to state 115
    statement        go to state 38
    var              go to state 39


State 93

   18 statement: DO BEGINLOOP statementzWsemi . ENDLOOP WHILE boolExpression

    ENDLOOP  shift, and go to state 116


State 94

   60 varzWcomma: var COMMA . varzWcomma

    IDENT  shift, and go to state 36

    varzWcomma  go to state 117
    var         go to state 58


State 95

   57 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 104


State 96

   63 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 118


State 97

   12 statementzWsemi: statement SEMICOLON statementzWsemi .

    $default  reduce using rule 12 (statementzWsemi)


State 98

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 99

   34 relationExpression: NOT L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 119


State 100

   28 relationExpression: NOT expression comp . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 120
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 101

   59 term: IDENT L_PAREN expressionzWcomma . R_PAREN

    R_PAREN  shift, and go to state 121


State 102

   42 expressionzWcomma: expression .
   43                  | expression . expressionCommaChain

    COMMA  shift, and go to state 122

    $default  reduce using rule 42 (expressionzWcomma)

    expressionCommaChain  go to state 123


State 103

   33 relationExpression: L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 33 (relationExpression)


State 104

   57 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


State 105

   58 term: MINUS L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 124


State 106

   15 statement: IF boolExpression THEN statementzWsemi . ENDIF
   16          | IF boolExpression THEN statementzWsemi . ELSE statementzWsemi ENDIF

    ENDIF  shift, and go to state 125
    ELSE   shift, and go to state 126


State 107

   24 boolExpression: relationAndExpression OR boolExpression .

    $default  reduce using rule 24 (boolExpression)


State 108

   26 relationAndExpression: relationExpression AND relationAndExpression .

    $default  reduce using rule 26 (relationAndExpression)


State 109

   27 relationExpression: expression comp expression .

    $default  reduce using rule 27 (relationExpression)


State 110

   47 expression: multiplicativeExpression PLUS expression .

    $default  reduce using rule 47 (expression)


State 111

   48 expression: multiplicativeExpression MINUS expression .

    $default  reduce using rule 48 (expression)


State 112

   52 multiplicativeExpression: term MULT multiplicativeExpression .

    $default  reduce using rule 52 (multiplicativeExpression)


State 113

   51 multiplicativeExpression: term DIV multiplicativeExpression .

    $default  reduce using rule 51 (multiplicativeExpression)


State 114

   50 multiplicativeExpression: term MOD multiplicativeExpression .

    $default  reduce using rule 50 (multiplicativeExpression)


State 115

   17 statement: WHILE boolExpression BEGINLOOP statementzWsemi . ENDLOOP

    ENDLOOP  shift, and go to state 127


State 116

   18 statement: DO BEGINLOOP statementzWsemi ENDLOOP . WHILE boolExpression

    WHILE  shift, and go to state 128


State 117

   60 varzWcomma: var COMMA varzWcomma .

    $default  reduce using rule 60 (varzWcomma)


State 118

   63 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 63 (var)


State 119

   34 relationExpression: NOT L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 34 (relationExpression)


State 120

   28 relationExpression: NOT expression comp expression .

    $default  reduce using rule 28 (relationExpression)


State 121

   59 term: IDENT L_PAREN expressionzWcomma R_PAREN .

    $default  reduce using rule 59 (term)


State 122

   44 expressionCommaChain: COMMA . expression expressionCommaChain
   45                     | COMMA . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 60
    MINUS    shift, and go to state 47

    expression                go to state 129
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 123

   43 expressionzWcomma: expression expressionCommaChain .

    $default  reduce using rule 43 (expressionzWcomma)


State 124

   58 term: MINUS L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 125

   15 statement: IF boolExpression THEN statementzWsemi ENDIF .

    $default  reduce using rule 15 (statement)


State 126

   16 statement: IF boolExpression THEN statementzWsemi ELSE . statementzWsemi ENDIF

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    DO        shift, and go to state 31
    CONTINUE  shift, and go to state 32
    READ      shift, and go to state 33
    WRITE     shift, and go to state 34
    RETURN    shift, and go to state 35
    IDENT     shift, and go to state 36

    statementzWsemi  go to state 130
    statement        go to state 38
    var              go to state 39


State 127

   17 statement: WHILE boolExpression BEGINLOOP statementzWsemi ENDLOOP .

    $default  reduce using rule 17 (statement)


State 128

   18 statement: DO BEGINLOOP statementzWsemi ENDLOOP WHILE . boolExpression

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    L_PAREN  shift, and go to state 46
    MINUS    shift, and go to state 47

    boolExpression            go to state 131
    relationAndExpression     go to state 49
    relationExpression        go to state 50
    expression                go to state 51
    multiplicativeExpression  go to state 52
    term                      go to state 53
    var                       go to state 54


State 129

   44 expressionCommaChain: COMMA expression . expressionCommaChain
   45                     | COMMA expression .

    COMMA  shift, and go to state 122

    $default  reduce using rule 45 (expressionCommaChain)

    expressionCommaChain  go to state 132


State 130

   16 statement: IF boolExpression THEN statementzWsemi ELSE statementzWsemi . ENDIF

    ENDIF  shift, and go to state 133


State 131

   18 statement: DO BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression .

    $default  reduce using rule 18 (statement)


State 132

   44 expressionCommaChain: COMMA expression expressionCommaChain .

    $default  reduce using rule 44 (expressionCommaChain)


State 133

   16 statement: IF boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF .

    $default  reduce using rule 16 (statement)
