Terminals unused in grammar

   SUB
   ADD


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    5 declarationsWsemi: %empty
    6                  | declaration SEMICOLON declarationsWsemi

    7 declaration: idents COLON ARRAY R_SQUARE_BRACKET NUMBER L_SQUARE_BRACKET OF INTEGER
    8            | idents COLON INTEGER

    9 idents: ident idents
   10       | ident

   11 ident: IDENT COMMA

   12 statementzWsemi: statement SEMICOLON statementzWsemi
   13                | statement SEMICOLON

   14 statement: var ASSIGN expression
   15          | IF boolExpression THEN statementzWsemi ENDIF
   16          | IF boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF
   17          | WHILE boolExpression BEGINLOOP statementzWsemi ENDLOOP
   18          | DO BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression
   19          | READ varzWcomma
   20          | WRITE varzWcomma
   21          | CONTINUE
   22          | RETURN expression

   23 boolExpression: relationAndExpression
   24               | relationAndExpression OR relationAndExpression

   25 relationAndExpression: relationExpression
   26                      | relationExpression AND relationExpression

   27 relationExpression: expression comp expression
   28                   | NOT expression comp expression
   29                   | TRUE
   30                   | NOT TRUE
   31                   | FALSE
   32                   | NOT FALSE
   33                   | L_PAREN boolExpression R_PAREN
   34                   | NOT L_PAREN boolExpression R_PAREN

   35 comp: EQ
   36     | NEQ
   37     | LT
   38     | GT
   39     | LTE
   40     | GTE

   41 expressionzWcomma: %empty
   42                  | expression
   43                  | expression expressionCommaChain

   44 expressionCommaChain: COMMA expression expressionCommaChain
   45                     | COMMA expression

   46 expression: multiplicativeExpression
   47           | multiplicativeExpression PLUS multiplicativeExpression
   48           | multiplicativeExpression PLUS multiplicativeExpression MINUS multiplicativeExpression
   49           | multiplicativeExpression MINUS multiplicativeExpression

   50 multiplicativeExpression: term
   51                         | term MOD term
   52                         | term DIV term
   53                         | term MULT term
   54                         | term MULT term DIV term
   55                         | term MULT term MOD term
   56                         | term DIV term MOD term
   57                         | term MULT term DIV term MOD term

   58 term: var
   59     | MINUS var
   60     | NUMBER
   61     | MINUS NUMBER
   62     | L_PAREN expression R_PAREN
   63     | MINUS L_PAREN expression R_PAREN
   64     | IDENT L_PAREN expressionzWcomma R_PAREN

   65 varzWcomma: var varzWcomma
   66           | var

   67 var: IDENT
   68    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 7 8
ARRAY (266) 7
OF (267) 7
IF (268) 15 16
THEN (269) 15 16
ENDIF (270) 15 16
ELSE (271) 16
WHILE (272) 17 18
DO (273) 18
BEGINLOOP (274) 17 18
ENDLOOP (275) 17 18
CONTINUE (276) 21
READ (277) 19
WRITE (278) 20
AND (279) 26
OR (280) 24
NOT (281) 28 30 32 34
TRUE (282) 29 30
FALSE (283) 31 32
RETURN (284) 22
SUB (285)
ADD (286)
MULT (287) 53 54 55 57
DIV (288) 52 54 56 57
MOD (289) 51 55 56 57
EQ (290) 35
NEQ (291) 36
LT (292) 37
GT (293) 38
LTE (294) 39
GTE (295) 40
IDENT (296) 4 11 64 67 68
NUMBER (297) 7 60 61
SEMICOLON (298) 4 6 12 13
COLON (299) 7 8
COMMA (300) 11 44 45
L_PAREN (301) 33 34 62 63 64
R_PAREN (302) 33 34 62 63 64
L_SQUARE_BRACKET (303) 7 68
R_SQUARE_BRACKET (304) 7 68
ASSIGN (305) 14
PLUS (306) 47 48
MINUS (307) 48 49 59 61 63


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarationsWsemi (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8, on right: 6
idents (59)
    on left: 9 10, on right: 7 8 9
ident (60)
    on left: 11, on right: 9 10
statementzWsemi (61)
    on left: 12 13, on right: 4 12 15 16 17 18
statement (62)
    on left: 14 15 16 17 18 19 20 21 22, on right: 12 13
boolExpression (63)
    on left: 23 24, on right: 15 16 17 18 33 34
relationAndExpression (64)
    on left: 25 26, on right: 23 24
relationExpression (65)
    on left: 27 28 29 30 31 32 33 34, on right: 25 26
comp (66)
    on left: 35 36 37 38 39 40, on right: 27 28
expressionzWcomma (67)
    on left: 41 42 43, on right: 64
expressionCommaChain (68)
    on left: 44 45, on right: 43 44
expression (69)
    on left: 46 47 48 49, on right: 14 22 27 28 42 43 44 45 62 63 68
multiplicativeExpression (70)
    on left: 50 51 52 53 54 55 56 57, on right: 46 47 48 49
term (71)
    on left: 58 59 60 61 62 63 64, on right: 50 51 52 53 54 55 56 57
varzWcomma (72)
    on left: 65 66, on right: 19 20 65
var (73)
    on left: 67 68, on right: 14 58 59 65 66


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarationsWsemi)

    declarationsWsemi  go to state 11
    declaration        go to state 12
    idents             go to state 13
    ident              go to state 14


State 10

   11 ident: IDENT . COMMA

    COMMA  shift, and go to state 15


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi . END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_PARAMS  shift, and go to state 16


State 12

    6 declarationsWsemi: declaration . SEMICOLON declarationsWsemi

    SEMICOLON  shift, and go to state 17


State 13

    7 declaration: idents . COLON ARRAY R_SQUARE_BRACKET NUMBER L_SQUARE_BRACKET OF INTEGER
    8            | idents . COLON INTEGER

    COLON  shift, and go to state 18


State 14

    9 idents: ident . idents
   10       | ident .

    IDENT  shift, and go to state 10

    $default  reduce using rule 10 (idents)

    idents  go to state 19
    ident   go to state 14


State 15

   11 ident: IDENT COMMA .

    $default  reduce using rule 11 (ident)


State 16

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS . BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    6 declarationsWsemi: declaration SEMICOLON . declarationsWsemi

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarationsWsemi)

    declarationsWsemi  go to state 21
    declaration        go to state 12
    idents             go to state 13
    ident              go to state 14


State 18

    7 declaration: idents COLON . ARRAY R_SQUARE_BRACKET NUMBER L_SQUARE_BRACKET OF INTEGER
    8            | idents COLON . INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 19

    9 idents: ident idents .

    $default  reduce using rule 9 (idents)


State 20

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS . declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarationsWsemi)

    declarationsWsemi  go to state 24
    declaration        go to state 12
    idents             go to state 13
    ident              go to state 14


State 21

    6 declarationsWsemi: declaration SEMICOLON declarationsWsemi .

    $default  reduce using rule 6 (declarationsWsemi)


State 22

    8 declaration: idents COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 23

    7 declaration: idents COLON ARRAY . R_SQUARE_BRACKET NUMBER L_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 25


State 24

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi . END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    7 declaration: idents COLON ARRAY R_SQUARE_BRACKET . NUMBER L_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS . BEGIN_BODY statementzWsemi END_BODY

    BEGIN_BODY  shift, and go to state 28


State 27

    7 declaration: idents COLON ARRAY R_SQUARE_BRACKET NUMBER . L_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY . statementzWsemi END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statementzWsemi  go to state 38
    statement        go to state 39
    var              go to state 40


State 29

    7 declaration: idents COLON ARRAY R_SQUARE_BRACKET NUMBER L_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 30

   15 statement: IF . boolExpression THEN statementzWsemi ENDIF
   16          | IF . boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    boolExpression            go to state 49
    relationAndExpression     go to state 50
    relationExpression        go to state 51
    expression                go to state 52
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 31

   17 statement: WHILE . boolExpression BEGINLOOP statementzWsemi ENDLOOP

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    boolExpression            go to state 56
    relationAndExpression     go to state 50
    relationExpression        go to state 51
    expression                go to state 52
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 32

   18 statement: DO . BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression

    BEGINLOOP  shift, and go to state 57


State 33

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 34

   19 statement: READ . varzWcomma

    IDENT  shift, and go to state 37

    varzWcomma  go to state 58
    var         go to state 59


State 35

   20 statement: WRITE . varzWcomma

    IDENT  shift, and go to state 37

    varzWcomma  go to state 60
    var         go to state 59


State 36

   22 statement: RETURN . expression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    expression                go to state 62
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 37

   67 var: IDENT .
   68    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 63

    $default  reduce using rule 67 (var)


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi . END_BODY

    END_BODY  shift, and go to state 64


State 39

   12 statementzWsemi: statement . SEMICOLON statementzWsemi
   13                | statement . SEMICOLON

    SEMICOLON  shift, and go to state 65


State 40

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 66


State 41

    7 declaration: idents COLON ARRAY R_SQUARE_BRACKET NUMBER L_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 67


State 42

   28 relationExpression: NOT . expression comp expression
   30                   | NOT . TRUE
   32                   | NOT . FALSE
   34                   | NOT . L_PAREN boolExpression R_PAREN

    TRUE     shift, and go to state 68
    FALSE    shift, and go to state 69
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 70
    MINUS    shift, and go to state 48

    expression                go to state 71
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 43

   29 relationExpression: TRUE .

    $default  reduce using rule 29 (relationExpression)


State 44

   31 relationExpression: FALSE .

    $default  reduce using rule 31 (relationExpression)


State 45

   64 term: IDENT . L_PAREN expressionzWcomma R_PAREN
   67 var: IDENT .
   68    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 72
    L_SQUARE_BRACKET  shift, and go to state 63

    $default  reduce using rule 67 (var)


State 46

   60 term: NUMBER .

    $default  reduce using rule 60 (term)


State 47

   33 relationExpression: L_PAREN . boolExpression R_PAREN
   62 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    boolExpression            go to state 73
    relationAndExpression     go to state 50
    relationExpression        go to state 51
    expression                go to state 74
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 48

   59 term: MINUS . var
   61     | MINUS . NUMBER
   63     | MINUS . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 37
    NUMBER   shift, and go to state 75
    L_PAREN  shift, and go to state 76

    var  go to state 77


State 49

   15 statement: IF boolExpression . THEN statementzWsemi ENDIF
   16          | IF boolExpression . THEN statementzWsemi ELSE statementzWsemi ENDIF

    THEN  shift, and go to state 78


State 50

   23 boolExpression: relationAndExpression .
   24               | relationAndExpression . OR relationAndExpression

    OR  shift, and go to state 79

    $default  reduce using rule 23 (boolExpression)


State 51

   25 relationAndExpression: relationExpression .
   26                      | relationExpression . AND relationExpression

    AND  shift, and go to state 80

    $default  reduce using rule 25 (relationAndExpression)


State 52

   27 relationExpression: expression . comp expression

    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82
    LT   shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    GTE  shift, and go to state 86

    comp  go to state 87


State 53

   46 expression: multiplicativeExpression .
   47           | multiplicativeExpression . PLUS multiplicativeExpression
   48           | multiplicativeExpression . PLUS multiplicativeExpression MINUS multiplicativeExpression
   49           | multiplicativeExpression . MINUS multiplicativeExpression

    PLUS   shift, and go to state 88
    MINUS  shift, and go to state 89

    $default  reduce using rule 46 (expression)


State 54

   50 multiplicativeExpression: term .
   51                         | term . MOD term
   52                         | term . DIV term
   53                         | term . MULT term
   54                         | term . MULT term DIV term
   55                         | term . MULT term MOD term
   56                         | term . DIV term MOD term
   57                         | term . MULT term DIV term MOD term

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 50 (multiplicativeExpression)


State 55

   58 term: var .

    $default  reduce using rule 58 (term)


State 56

   17 statement: WHILE boolExpression . BEGINLOOP statementzWsemi ENDLOOP

    BEGINLOOP  shift, and go to state 93


State 57

   18 statement: DO BEGINLOOP . statementzWsemi ENDLOOP WHILE boolExpression

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statementzWsemi  go to state 94
    statement        go to state 39
    var              go to state 40


State 58

   19 statement: READ varzWcomma .

    $default  reduce using rule 19 (statement)


State 59

   65 varzWcomma: var . varzWcomma
   66           | var .

    IDENT  shift, and go to state 37

    $default  reduce using rule 66 (varzWcomma)

    varzWcomma  go to state 95
    var         go to state 59


State 60

   20 statement: WRITE varzWcomma .

    $default  reduce using rule 20 (statement)


State 61

   62 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    expression                go to state 96
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 62

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 63

   68 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    expression                go to state 97
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 64

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY .

    $default  reduce using rule 4 (function)


State 65

   12 statementzWsemi: statement SEMICOLON . statementzWsemi
   13                | statement SEMICOLON .

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 13 (statementzWsemi)

    statementzWsemi  go to state 98
    statement        go to state 39
    var              go to state 40


State 66

   14 statement: var ASSIGN . expression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    expression                go to state 99
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 67

    7 declaration: idents COLON ARRAY R_SQUARE_BRACKET NUMBER L_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


State 68

   30 relationExpression: NOT TRUE .

    $default  reduce using rule 30 (relationExpression)


State 69

   32 relationExpression: NOT FALSE .

    $default  reduce using rule 32 (relationExpression)


State 70

   34 relationExpression: NOT L_PAREN . boolExpression R_PAREN
   62 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    boolExpression            go to state 100
    relationAndExpression     go to state 50
    relationExpression        go to state 51
    expression                go to state 74
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 71

   28 relationExpression: NOT expression . comp expression

    EQ   shift, and go to state 81
    NEQ  shift, and go to state 82
    LT   shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    GTE  shift, and go to state 86

    comp  go to state 101


State 72

   64 term: IDENT L_PAREN . expressionzWcomma R_PAREN

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    $default  reduce using rule 41 (expressionzWcomma)

    expressionzWcomma         go to state 102
    expression                go to state 103
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 73

   33 relationExpression: L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 104


State 74

   27 relationExpression: expression . comp expression
   62 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 81
    NEQ      shift, and go to state 82
    LT       shift, and go to state 83
    GT       shift, and go to state 84
    LTE      shift, and go to state 85
    GTE      shift, and go to state 86
    R_PAREN  shift, and go to state 105

    comp  go to state 87


State 75

   61 term: MINUS NUMBER .

    $default  reduce using rule 61 (term)


State 76

   63 term: MINUS L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    expression                go to state 106
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 77

   59 term: MINUS var .

    $default  reduce using rule 59 (term)


State 78

   15 statement: IF boolExpression THEN . statementzWsemi ENDIF
   16          | IF boolExpression THEN . statementzWsemi ELSE statementzWsemi ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statementzWsemi  go to state 107
    statement        go to state 39
    var              go to state 40


State 79

   24 boolExpression: relationAndExpression OR . relationAndExpression

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    relationAndExpression     go to state 108
    relationExpression        go to state 51
    expression                go to state 52
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 80

   26 relationAndExpression: relationExpression AND . relationExpression

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    relationExpression        go to state 109
    expression                go to state 52
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 81

   35 comp: EQ .

    $default  reduce using rule 35 (comp)


State 82

   36 comp: NEQ .

    $default  reduce using rule 36 (comp)


State 83

   37 comp: LT .

    $default  reduce using rule 37 (comp)


State 84

   38 comp: GT .

    $default  reduce using rule 38 (comp)


State 85

   39 comp: LTE .

    $default  reduce using rule 39 (comp)


State 86

   40 comp: GTE .

    $default  reduce using rule 40 (comp)


State 87

   27 relationExpression: expression comp . expression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    expression                go to state 110
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 88

   47 expression: multiplicativeExpression PLUS . multiplicativeExpression
   48           | multiplicativeExpression PLUS . multiplicativeExpression MINUS multiplicativeExpression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    multiplicativeExpression  go to state 111
    term                      go to state 54
    var                       go to state 55


State 89

   49 expression: multiplicativeExpression MINUS . multiplicativeExpression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    multiplicativeExpression  go to state 112
    term                      go to state 54
    var                       go to state 55


State 90

   53 multiplicativeExpression: term MULT . term
   54                         | term MULT . term DIV term
   55                         | term MULT . term MOD term
   57                         | term MULT . term DIV term MOD term

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    term  go to state 113
    var   go to state 55


State 91

   52 multiplicativeExpression: term DIV . term
   56                         | term DIV . term MOD term

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    term  go to state 114
    var   go to state 55


State 92

   51 multiplicativeExpression: term MOD . term

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    term  go to state 115
    var   go to state 55


State 93

   17 statement: WHILE boolExpression BEGINLOOP . statementzWsemi ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statementzWsemi  go to state 116
    statement        go to state 39
    var              go to state 40


State 94

   18 statement: DO BEGINLOOP statementzWsemi . ENDLOOP WHILE boolExpression

    ENDLOOP  shift, and go to state 117


State 95

   65 varzWcomma: var varzWcomma .

    $default  reduce using rule 65 (varzWcomma)


State 96

   62 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 105


State 97

   68 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 118


State 98

   12 statementzWsemi: statement SEMICOLON statementzWsemi .

    $default  reduce using rule 12 (statementzWsemi)


State 99

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 100

   34 relationExpression: NOT L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 119


State 101

   28 relationExpression: NOT expression comp . expression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    expression                go to state 120
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 102

   64 term: IDENT L_PAREN expressionzWcomma . R_PAREN

    R_PAREN  shift, and go to state 121


State 103

   42 expressionzWcomma: expression .
   43                  | expression . expressionCommaChain

    COMMA  shift, and go to state 122

    $default  reduce using rule 42 (expressionzWcomma)

    expressionCommaChain  go to state 123


State 104

   33 relationExpression: L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 33 (relationExpression)


State 105

   62 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term)


State 106

   63 term: MINUS L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 124


State 107

   15 statement: IF boolExpression THEN statementzWsemi . ENDIF
   16          | IF boolExpression THEN statementzWsemi . ELSE statementzWsemi ENDIF

    ENDIF  shift, and go to state 125
    ELSE   shift, and go to state 126


State 108

   24 boolExpression: relationAndExpression OR relationAndExpression .

    $default  reduce using rule 24 (boolExpression)


State 109

   26 relationAndExpression: relationExpression AND relationExpression .

    $default  reduce using rule 26 (relationAndExpression)


State 110

   27 relationExpression: expression comp expression .

    $default  reduce using rule 27 (relationExpression)


State 111

   47 expression: multiplicativeExpression PLUS multiplicativeExpression .
   48           | multiplicativeExpression PLUS multiplicativeExpression . MINUS multiplicativeExpression

    MINUS  shift, and go to state 127

    $default  reduce using rule 47 (expression)


State 112

   49 expression: multiplicativeExpression MINUS multiplicativeExpression .

    $default  reduce using rule 49 (expression)


State 113

   53 multiplicativeExpression: term MULT term .
   54                         | term MULT term . DIV term
   55                         | term MULT term . MOD term
   57                         | term MULT term . DIV term MOD term

    DIV  shift, and go to state 128
    MOD  shift, and go to state 129

    $default  reduce using rule 53 (multiplicativeExpression)


State 114

   52 multiplicativeExpression: term DIV term .
   56                         | term DIV term . MOD term

    MOD  shift, and go to state 130

    $default  reduce using rule 52 (multiplicativeExpression)


State 115

   51 multiplicativeExpression: term MOD term .

    $default  reduce using rule 51 (multiplicativeExpression)


State 116

   17 statement: WHILE boolExpression BEGINLOOP statementzWsemi . ENDLOOP

    ENDLOOP  shift, and go to state 131


State 117

   18 statement: DO BEGINLOOP statementzWsemi ENDLOOP . WHILE boolExpression

    WHILE  shift, and go to state 132


State 118

   68 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 68 (var)


State 119

   34 relationExpression: NOT L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 34 (relationExpression)


State 120

   28 relationExpression: NOT expression comp expression .

    $default  reduce using rule 28 (relationExpression)


State 121

   64 term: IDENT L_PAREN expressionzWcomma R_PAREN .

    $default  reduce using rule 64 (term)


State 122

   44 expressionCommaChain: COMMA . expression expressionCommaChain
   45                     | COMMA . expression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    expression                go to state 133
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 123

   43 expressionzWcomma: expression expressionCommaChain .

    $default  reduce using rule 43 (expressionzWcomma)


State 124

   63 term: MINUS L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (term)


State 125

   15 statement: IF boolExpression THEN statementzWsemi ENDIF .

    $default  reduce using rule 15 (statement)


State 126

   16 statement: IF boolExpression THEN statementzWsemi ELSE . statementzWsemi ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statementzWsemi  go to state 134
    statement        go to state 39
    var              go to state 40


State 127

   48 expression: multiplicativeExpression PLUS multiplicativeExpression MINUS . multiplicativeExpression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    multiplicativeExpression  go to state 135
    term                      go to state 54
    var                       go to state 55


State 128

   54 multiplicativeExpression: term MULT term DIV . term
   57                         | term MULT term DIV . term MOD term

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    term  go to state 136
    var   go to state 55


State 129

   55 multiplicativeExpression: term MULT term MOD . term

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    term  go to state 137
    var   go to state 55


State 130

   56 multiplicativeExpression: term DIV term MOD . term

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    term  go to state 138
    var   go to state 55


State 131

   17 statement: WHILE boolExpression BEGINLOOP statementzWsemi ENDLOOP .

    $default  reduce using rule 17 (statement)


State 132

   18 statement: DO BEGINLOOP statementzWsemi ENDLOOP WHILE . boolExpression

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 47
    MINUS    shift, and go to state 48

    boolExpression            go to state 139
    relationAndExpression     go to state 50
    relationExpression        go to state 51
    expression                go to state 52
    multiplicativeExpression  go to state 53
    term                      go to state 54
    var                       go to state 55


State 133

   44 expressionCommaChain: COMMA expression . expressionCommaChain
   45                     | COMMA expression .

    COMMA  shift, and go to state 122

    $default  reduce using rule 45 (expressionCommaChain)

    expressionCommaChain  go to state 140


State 134

   16 statement: IF boolExpression THEN statementzWsemi ELSE statementzWsemi . ENDIF

    ENDIF  shift, and go to state 141


State 135

   48 expression: multiplicativeExpression PLUS multiplicativeExpression MINUS multiplicativeExpression .

    $default  reduce using rule 48 (expression)


State 136

   54 multiplicativeExpression: term MULT term DIV term .
   57                         | term MULT term DIV term . MOD term

    MOD  shift, and go to state 142

    $default  reduce using rule 54 (multiplicativeExpression)


State 137

   55 multiplicativeExpression: term MULT term MOD term .

    $default  reduce using rule 55 (multiplicativeExpression)


State 138

   56 multiplicativeExpression: term DIV term MOD term .

    $default  reduce using rule 56 (multiplicativeExpression)


State 139

   18 statement: DO BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression .

    $default  reduce using rule 18 (statement)


State 140

   44 expressionCommaChain: COMMA expression expressionCommaChain .

    $default  reduce using rule 44 (expressionCommaChain)


State 141

   16 statement: IF boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF .

    $default  reduce using rule 16 (statement)


State 142

   57 multiplicativeExpression: term MULT term DIV term MOD . term

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    L_PAREN  shift, and go to state 61
    MINUS    shift, and go to state 48

    term  go to state 143
    var   go to state 55


State 143

   57 multiplicativeExpression: term MULT term DIV term MOD term .

    $default  reduce using rule 57 (multiplicativeExpression)
