Grammar

    0 $accept: prog_start "end of file"

    1 prog_start: program

    2 program: %empty
    3        | function program

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY
    5         | FUNCTION error

    6 declarationsWsemi: %empty
    7                  | declaration SEMICOLON declarationsWsemi
    8                  | error SEMICOLON
    9                  | declaration error declarationsWsemi

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | idents COLON INTEGER

   12 idents: IDENT COMMA idents
   13       | IDENT

   14 statementzWsemi: statement SEMICOLON statementzWsemi
   15                | statement SEMICOLON
   16                | error SEMICOLON
   17                | statement error

   18 statement: var ASSIGN expression
   19          | IF boolExpression THEN st statementzWsemi en ENDIF
   20          | IF boolExpression THEN st statementzWsemi ELSE statementzWsemi en ENDIF
   21          | WHILE boolExpression BEGINLOOP st statementzWsemi en ENDLOOP
   22          | DO BEGINLOOP st statementzWsemi en ENDLOOP WHILE boolExpression
   23          | READ varzWcomma
   24          | WRITE varzWcomma
   25          | CONTINUE
   26          | RETURN expression

   27 boolExpression: relationAndExpression
   28               | relationAndExpression OR boolExpression

   29 relationAndExpression: relationExpression
   30                      | relationExpression AND relationAndExpression

   31 relationExpression: expression comp expression
   32                   | NOT expression comp expression
   33                   | TRUE
   34                   | NOT TRUE
   35                   | FALSE
   36                   | NOT FALSE
   37                   | L_PAREN boolExpression R_PAREN
   38                   | NOT L_PAREN boolExpression R_PAREN

   39 st: %empty

   40 en: %empty

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expressionzWcomma: %empty
   48                  | expression
   49                  | expression expressionCommaChain

   50 expressionCommaChain: COMMA expression expressionCommaChain
   51                     | COMMA expression

   52 expression: multiplicativeExpression
   53           | multiplicativeExpression ADD expression
   54           | multiplicativeExpression SUB expression

   55 multiplicativeExpression: term
   56                         | term MOD multiplicativeExpression
   57                         | term DIV multiplicativeExpression
   58                         | term MULT multiplicativeExpression

   59 term: var
   60     | SUB var
   61     | NUMBER
   62     | SUB NUMBER
   63     | L_PAREN expression R_PAREN
   64     | SUB L_PAREN expression R_PAREN
   65     | IDENT L_PAREN expressionzWcomma R_PAREN

   66 varzWcomma: var COMMA varzWcomma
   67           | var

   68 var: IDENT
   69    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 5 8 9 16 17
FUNCTION (258) 4 5
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 10 11
ARRAY (266) 10
OF (267) 10
IF (268) 19 20
THEN (269) 19 20
ENDIF (270) 19 20
ELSE (271) 20
WHILE (272) 21 22
DO (273) 22
BEGINLOOP (274) 21 22
ENDLOOP (275) 21 22
CONTINUE (276) 25
READ (277) 23
WRITE (278) 24
AND (279) 30
OR (280) 28
NOT (281) 32 34 36 38
TRUE (282) 33 34
FALSE (283) 35 36
RETURN (284) 26
SUB (285) 54 60 62 64
ADD (286) 53
MULT (287) 58
DIV (288) 57
MOD (289) 56
EQ (290) 41
NEQ (291) 42
LT (292) 43
GT (293) 44
LTE (294) 45
GTE (295) 46
IDENT (296) 4 12 13 65 68 69
NUMBER (297) 10 61 62
SEMICOLON (298) 4 7 8 14 15 16
COLON (299) 10 11
COMMA (300) 12 50 51 66
L_PAREN (301) 37 38 63 64 65
R_PAREN (302) 37 38 63 64 65
L_SQUARE_BRACKET (303) 10 69
R_SQUARE_BRACKET (304) 10 69
ASSIGN (305) 18
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
program (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4 5, on right: 3
declarationsWsemi (56)
    on left: 6 7 8 9, on right: 4 7 9
declaration (57)
    on left: 10 11, on right: 7 9
idents (58)
    on left: 12 13, on right: 10 11 12
statementzWsemi (59)
    on left: 14 15 16 17, on right: 4 14 19 20 21 22
statement (60)
    on left: 18 19 20 21 22 23 24 25 26, on right: 14 15 17
boolExpression (61)
    on left: 27 28, on right: 19 20 21 22 28 37 38
relationAndExpression (62)
    on left: 29 30, on right: 27 28 30
relationExpression (63)
    on left: 31 32 33 34 35 36 37 38, on right: 29 30
st (64)
    on left: 39, on right: 19 20 21 22
en (65)
    on left: 40, on right: 19 20 21 22
comp (66)
    on left: 41 42 43 44 45 46, on right: 31 32
expressionzWcomma (67)
    on left: 47 48 49, on right: 65
expressionCommaChain (68)
    on left: 50 51, on right: 49 50
expression (69)
    on left: 52 53 54, on right: 18 26 31 32 48 49 50 51 53 54 63 64
    69
multiplicativeExpression (70)
    on left: 55 56 57 58, on right: 52 53 54 56 57 58
term (71)
    on left: 59 60 61 62 63 64 65, on right: 55 56 57 58
varzWcomma (72)
    on left: 66 67, on right: 23 24 66
var (73)
    on left: 68 69, on right: 18 59 60 66 67


State 0

    0 $accept: . prog_start "end of file"

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    prog_start  go to state 2
    program     go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY
    5         | FUNCTION . error

    error  shift, and go to state 5
    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 7


State 3

    1 prog_start: program .

    $default  reduce using rule 1 (prog_start)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 8
    function  go to state 4


State 5

    5 function: FUNCTION error .

    $default  reduce using rule 5 (function)


State 6

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start "end of file" .

    $default  accept


State 8

    3 program: function program .

    $default  reduce using rule 3 (program)


State 9

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 13
    declaration        go to state 14
    idents             go to state 15


State 11

    8 declarationsWsemi: error . SEMICOLON

    SEMICOLON  shift, and go to state 16


State 12

   12 idents: IDENT . COMMA idents
   13       | IDENT .

    COMMA  shift, and go to state 17

    $default  reduce using rule 13 (idents)


State 13

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi . END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_PARAMS  shift, and go to state 18


State 14

    7 declarationsWsemi: declaration . SEMICOLON declarationsWsemi
    9                  | declaration . error declarationsWsemi

    error      shift, and go to state 19
    SEMICOLON  shift, and go to state 20


State 15

   10 declaration: idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | idents . COLON INTEGER

    COLON  shift, and go to state 21


State 16

    8 declarationsWsemi: error SEMICOLON .

    $default  reduce using rule 8 (declarationsWsemi)


State 17

   12 idents: IDENT COMMA . idents

    IDENT  shift, and go to state 12

    idents  go to state 22


State 18

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS . BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_LOCALS  shift, and go to state 23


State 19

    9 declarationsWsemi: declaration error . declarationsWsemi

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarationsWsemi)
    END_LOCALS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 24
    declaration        go to state 14
    idents             go to state 15


State 20

    7 declarationsWsemi: declaration SEMICOLON . declarationsWsemi

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarationsWsemi)
    END_LOCALS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 25
    declaration        go to state 14
    idents             go to state 15


State 21

   10 declaration: idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | idents COLON . INTEGER

    INTEGER  shift, and go to state 26
    ARRAY    shift, and go to state 27


State 22

   12 idents: IDENT COMMA idents .

    $default  reduce using rule 12 (idents)


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS . declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_LOCALS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 28
    declaration        go to state 14
    idents             go to state 15


State 24

    9 declarationsWsemi: declaration error declarationsWsemi .

    $default  reduce using rule 9 (declarationsWsemi)


State 25

    7 declarationsWsemi: declaration SEMICOLON declarationsWsemi .

    $default  reduce using rule 7 (declarationsWsemi)


State 26

   11 declaration: idents COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 27

   10 declaration: idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi . END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_LOCALS  shift, and go to state 30


State 29

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 31


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS . BEGIN_BODY statementzWsemi END_BODY

    BEGIN_BODY  shift, and go to state 32


State 31

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 32

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY . statementzWsemi END_BODY

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statementzWsemi  go to state 43
    statement        go to state 44
    var              go to state 45


State 33

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 46


State 34

   16 statementzWsemi: error . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 35

   19 statement: IF . boolExpression THEN st statementzWsemi en ENDIF
   20          | IF . boolExpression THEN st statementzWsemi ELSE statementzWsemi en ENDIF

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 54

    boolExpression            go to state 55
    relationAndExpression     go to state 56
    relationExpression        go to state 57
    expression                go to state 58
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 36

   21 statement: WHILE . boolExpression BEGINLOOP st statementzWsemi en ENDLOOP

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 54

    boolExpression            go to state 62
    relationAndExpression     go to state 56
    relationExpression        go to state 57
    expression                go to state 58
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 37

   22 statement: DO . BEGINLOOP st statementzWsemi en ENDLOOP WHILE boolExpression

    BEGINLOOP  shift, and go to state 63


State 38

   25 statement: CONTINUE .

    $default  reduce using rule 25 (statement)


State 39

   23 statement: READ . varzWcomma

    IDENT  shift, and go to state 42

    varzWcomma  go to state 64
    var         go to state 65


State 40

   24 statement: WRITE . varzWcomma

    IDENT  shift, and go to state 42

    varzWcomma  go to state 66
    var         go to state 65


State 41

   26 statement: RETURN . expression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 68
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 42

   68 var: IDENT .
   69    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 68 (var)


State 43

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi . END_BODY

    END_BODY  shift, and go to state 70


State 44

   14 statementzWsemi: statement . SEMICOLON statementzWsemi
   15                | statement . SEMICOLON
   17                | statement . error

    error      shift, and go to state 71
    SEMICOLON  shift, and go to state 72


State 45

   18 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 73


State 46

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 74


State 47

   16 statementzWsemi: error SEMICOLON .

    $default  reduce using rule 16 (statementzWsemi)


State 48

   32 relationExpression: NOT . expression comp expression
   34                   | NOT . TRUE
   36                   | NOT . FALSE
   38                   | NOT . L_PAREN boolExpression R_PAREN

    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 77

    expression                go to state 78
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 49

   33 relationExpression: TRUE .

    $default  reduce using rule 33 (relationExpression)


State 50

   35 relationExpression: FALSE .

    $default  reduce using rule 35 (relationExpression)


State 51

   60 term: SUB . var
   62     | SUB . NUMBER
   64     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 79
    L_PAREN  shift, and go to state 80

    var  go to state 81


State 52

   65 term: IDENT . L_PAREN expressionzWcomma R_PAREN
   68 var: IDENT .
   69    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 82
    L_SQUARE_BRACKET  shift, and go to state 69

    $default  reduce using rule 68 (var)


State 53

   61 term: NUMBER .

    $default  reduce using rule 61 (term)


State 54

   37 relationExpression: L_PAREN . boolExpression R_PAREN
   63 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 54

    boolExpression            go to state 83
    relationAndExpression     go to state 56
    relationExpression        go to state 57
    expression                go to state 84
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 55

   19 statement: IF boolExpression . THEN st statementzWsemi en ENDIF
   20          | IF boolExpression . THEN st statementzWsemi ELSE statementzWsemi en ENDIF

    THEN  shift, and go to state 85


State 56

   27 boolExpression: relationAndExpression .
   28               | relationAndExpression . OR boolExpression

    OR  shift, and go to state 86

    $default  reduce using rule 27 (boolExpression)


State 57

   29 relationAndExpression: relationExpression .
   30                      | relationExpression . AND relationAndExpression

    AND  shift, and go to state 87

    $default  reduce using rule 29 (relationAndExpression)


State 58

   31 relationExpression: expression . comp expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    comp  go to state 94


State 59

   52 expression: multiplicativeExpression .
   53           | multiplicativeExpression . ADD expression
   54           | multiplicativeExpression . SUB expression

    SUB  shift, and go to state 95
    ADD  shift, and go to state 96

    $default  reduce using rule 52 (expression)


State 60

   55 multiplicativeExpression: term .
   56                         | term . MOD multiplicativeExpression
   57                         | term . DIV multiplicativeExpression
   58                         | term . MULT multiplicativeExpression

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 55 (multiplicativeExpression)


State 61

   59 term: var .

    $default  reduce using rule 59 (term)


State 62

   21 statement: WHILE boolExpression . BEGINLOOP st statementzWsemi en ENDLOOP

    BEGINLOOP  shift, and go to state 100


State 63

   22 statement: DO BEGINLOOP . st statementzWsemi en ENDLOOP WHILE boolExpression

    $default  reduce using rule 39 (st)

    st  go to state 101


State 64

   23 statement: READ varzWcomma .

    $default  reduce using rule 23 (statement)


State 65

   66 varzWcomma: var . COMMA varzWcomma
   67           | var .

    COMMA  shift, and go to state 102

    $default  reduce using rule 67 (varzWcomma)


State 66

   24 statement: WRITE varzWcomma .

    $default  reduce using rule 24 (statement)


State 67

   63 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 103
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 68

   26 statement: RETURN expression .

    $default  reduce using rule 26 (statement)


State 69

   69 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 104
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 70

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY .

    $default  reduce using rule 4 (function)


State 71

   17 statementzWsemi: statement error .

    $default  reduce using rule 17 (statementzWsemi)


State 72

   14 statementzWsemi: statement SEMICOLON . statementzWsemi
   15                | statement SEMICOLON .

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    END_BODY  reduce using rule 15 (statementzWsemi)
    ENDIF     reduce using rule 15 (statementzWsemi)
    ELSE      reduce using rule 15 (statementzWsemi)
    ENDLOOP   reduce using rule 15 (statementzWsemi)

    statementzWsemi  go to state 105
    statement        go to state 44
    var              go to state 45


State 73

   18 statement: var ASSIGN . expression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 106
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 74

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 75

   34 relationExpression: NOT TRUE .

    $default  reduce using rule 34 (relationExpression)


State 76

   36 relationExpression: NOT FALSE .

    $default  reduce using rule 36 (relationExpression)


State 77

   38 relationExpression: NOT L_PAREN . boolExpression R_PAREN
   63 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 54

    boolExpression            go to state 107
    relationAndExpression     go to state 56
    relationExpression        go to state 57
    expression                go to state 84
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 78

   32 relationExpression: NOT expression . comp expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    comp  go to state 108


State 79

   62 term: SUB NUMBER .

    $default  reduce using rule 62 (term)


State 80

   64 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 109
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 81

   60 term: SUB var .

    $default  reduce using rule 60 (term)


State 82

   65 term: IDENT L_PAREN . expressionzWcomma R_PAREN

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    $default  reduce using rule 47 (expressionzWcomma)

    expressionzWcomma         go to state 110
    expression                go to state 111
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 83

   37 relationExpression: L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 112


State 84

   31 relationExpression: expression . comp expression
   63 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89
    LT       shift, and go to state 90
    GT       shift, and go to state 91
    LTE      shift, and go to state 92
    GTE      shift, and go to state 93
    R_PAREN  shift, and go to state 113

    comp  go to state 94


State 85

   19 statement: IF boolExpression THEN . st statementzWsemi en ENDIF
   20          | IF boolExpression THEN . st statementzWsemi ELSE statementzWsemi en ENDIF

    $default  reduce using rule 39 (st)

    st  go to state 114


State 86

   28 boolExpression: relationAndExpression OR . boolExpression

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 54

    boolExpression            go to state 115
    relationAndExpression     go to state 56
    relationExpression        go to state 57
    expression                go to state 58
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 87

   30 relationAndExpression: relationExpression AND . relationAndExpression

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 54

    relationAndExpression     go to state 116
    relationExpression        go to state 57
    expression                go to state 58
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 88

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 89

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 90

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 91

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 92

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 93

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 94

   31 relationExpression: expression comp . expression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 117
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 95

   54 expression: multiplicativeExpression SUB . expression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 118
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 96

   53 expression: multiplicativeExpression ADD . expression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 119
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 97

   58 multiplicativeExpression: term MULT . multiplicativeExpression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    multiplicativeExpression  go to state 120
    term                      go to state 60
    var                       go to state 61


State 98

   57 multiplicativeExpression: term DIV . multiplicativeExpression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    multiplicativeExpression  go to state 121
    term                      go to state 60
    var                       go to state 61


State 99

   56 multiplicativeExpression: term MOD . multiplicativeExpression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    multiplicativeExpression  go to state 122
    term                      go to state 60
    var                       go to state 61


State 100

   21 statement: WHILE boolExpression BEGINLOOP . st statementzWsemi en ENDLOOP

    $default  reduce using rule 39 (st)

    st  go to state 123


State 101

   22 statement: DO BEGINLOOP st . statementzWsemi en ENDLOOP WHILE boolExpression

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statementzWsemi  go to state 124
    statement        go to state 44
    var              go to state 45


State 102

   66 varzWcomma: var COMMA . varzWcomma

    IDENT  shift, and go to state 42

    varzWcomma  go to state 125
    var         go to state 65


State 103

   63 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 113


State 104

   69 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 126


State 105

   14 statementzWsemi: statement SEMICOLON statementzWsemi .

    $default  reduce using rule 14 (statementzWsemi)


State 106

   18 statement: var ASSIGN expression .

    $default  reduce using rule 18 (statement)


State 107

   38 relationExpression: NOT L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 127


State 108

   32 relationExpression: NOT expression comp . expression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 128
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 109

   64 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 129


State 110

   65 term: IDENT L_PAREN expressionzWcomma . R_PAREN

    R_PAREN  shift, and go to state 130


State 111

   48 expressionzWcomma: expression .
   49                  | expression . expressionCommaChain

    COMMA  shift, and go to state 131

    $default  reduce using rule 48 (expressionzWcomma)

    expressionCommaChain  go to state 132


State 112

   37 relationExpression: L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 37 (relationExpression)


State 113

   63 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (term)


State 114

   19 statement: IF boolExpression THEN st . statementzWsemi en ENDIF
   20          | IF boolExpression THEN st . statementzWsemi ELSE statementzWsemi en ENDIF

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statementzWsemi  go to state 133
    statement        go to state 44
    var              go to state 45


State 115

   28 boolExpression: relationAndExpression OR boolExpression .

    $default  reduce using rule 28 (boolExpression)


State 116

   30 relationAndExpression: relationExpression AND relationAndExpression .

    $default  reduce using rule 30 (relationAndExpression)


State 117

   31 relationExpression: expression comp expression .

    $default  reduce using rule 31 (relationExpression)


State 118

   54 expression: multiplicativeExpression SUB expression .

    $default  reduce using rule 54 (expression)


State 119

   53 expression: multiplicativeExpression ADD expression .

    $default  reduce using rule 53 (expression)


State 120

   58 multiplicativeExpression: term MULT multiplicativeExpression .

    $default  reduce using rule 58 (multiplicativeExpression)


State 121

   57 multiplicativeExpression: term DIV multiplicativeExpression .

    $default  reduce using rule 57 (multiplicativeExpression)


State 122

   56 multiplicativeExpression: term MOD multiplicativeExpression .

    $default  reduce using rule 56 (multiplicativeExpression)


State 123

   21 statement: WHILE boolExpression BEGINLOOP st . statementzWsemi en ENDLOOP

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statementzWsemi  go to state 134
    statement        go to state 44
    var              go to state 45


State 124

   22 statement: DO BEGINLOOP st statementzWsemi . en ENDLOOP WHILE boolExpression

    $default  reduce using rule 40 (en)

    en  go to state 135


State 125

   66 varzWcomma: var COMMA varzWcomma .

    $default  reduce using rule 66 (varzWcomma)


State 126

   69 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 69 (var)


State 127

   38 relationExpression: NOT L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 38 (relationExpression)


State 128

   32 relationExpression: NOT expression comp expression .

    $default  reduce using rule 32 (relationExpression)


State 129

   64 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 64 (term)


State 130

   65 term: IDENT L_PAREN expressionzWcomma R_PAREN .

    $default  reduce using rule 65 (term)


State 131

   50 expressionCommaChain: COMMA . expression expressionCommaChain
   51                     | COMMA . expression

    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 67

    expression                go to state 136
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 132

   49 expressionzWcomma: expression expressionCommaChain .

    $default  reduce using rule 49 (expressionzWcomma)


State 133

   19 statement: IF boolExpression THEN st statementzWsemi . en ENDIF
   20          | IF boolExpression THEN st statementzWsemi . ELSE statementzWsemi en ENDIF

    ELSE  shift, and go to state 137

    $default  reduce using rule 40 (en)

    en  go to state 138


State 134

   21 statement: WHILE boolExpression BEGINLOOP st statementzWsemi . en ENDLOOP

    $default  reduce using rule 40 (en)

    en  go to state 139


State 135

   22 statement: DO BEGINLOOP st statementzWsemi en . ENDLOOP WHILE boolExpression

    ENDLOOP  shift, and go to state 140


State 136

   50 expressionCommaChain: COMMA expression . expressionCommaChain
   51                     | COMMA expression .

    COMMA  shift, and go to state 131

    $default  reduce using rule 51 (expressionCommaChain)

    expressionCommaChain  go to state 141


State 137

   20 statement: IF boolExpression THEN st statementzWsemi ELSE . statementzWsemi en ENDIF

    error     shift, and go to state 34
    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    statementzWsemi  go to state 142
    statement        go to state 44
    var              go to state 45


State 138

   19 statement: IF boolExpression THEN st statementzWsemi en . ENDIF

    ENDIF  shift, and go to state 143


State 139

   21 statement: WHILE boolExpression BEGINLOOP st statementzWsemi en . ENDLOOP

    ENDLOOP  shift, and go to state 144


State 140

   22 statement: DO BEGINLOOP st statementzWsemi en ENDLOOP . WHILE boolExpression

    WHILE  shift, and go to state 145


State 141

   50 expressionCommaChain: COMMA expression expressionCommaChain .

    $default  reduce using rule 50 (expressionCommaChain)


State 142

   20 statement: IF boolExpression THEN st statementzWsemi ELSE statementzWsemi . en ENDIF

    $default  reduce using rule 40 (en)

    en  go to state 146


State 143

   19 statement: IF boolExpression THEN st statementzWsemi en ENDIF .

    $default  reduce using rule 19 (statement)


State 144

   21 statement: WHILE boolExpression BEGINLOOP st statementzWsemi en ENDLOOP .

    $default  reduce using rule 21 (statement)


State 145

   22 statement: DO BEGINLOOP st statementzWsemi en ENDLOOP WHILE . boolExpression

    NOT      shift, and go to state 48
    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    SUB      shift, and go to state 51
    IDENT    shift, and go to state 52
    NUMBER   shift, and go to state 53
    L_PAREN  shift, and go to state 54

    boolExpression            go to state 147
    relationAndExpression     go to state 56
    relationExpression        go to state 57
    expression                go to state 58
    multiplicativeExpression  go to state 59
    term                      go to state 60
    var                       go to state 61


State 146

   20 statement: IF boolExpression THEN st statementzWsemi ELSE statementzWsemi en . ENDIF

    ENDIF  shift, and go to state 148


State 147

   22 statement: DO BEGINLOOP st statementzWsemi en ENDLOOP WHILE boolExpression .

    $default  reduce using rule 22 (statement)


State 148

   20 statement: IF boolExpression THEN st statementzWsemi ELSE statementzWsemi en ENDIF .

    $default  reduce using rule 20 (statement)
