Terminals unused in grammar

   CONTINUE


Grammar

    0 $accept: prog_start "end of file"

    1 prog_start: program

    2 program: %empty
    3        | function program

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY
    5         | FUNCTION error

    6 declarationsWsemi: %empty
    7                  | declaration SEMICOLON declarationsWsemi
    8                  | error SEMICOLON
    9                  | declaration error declarationsWsemi

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | idents COLON INTEGER

   12 idents: IDENT COMMA idents
   13       | IDENT

   14 statementzWsemi: statement SEMICOLON statementzWsemi
   15                | statement SEMICOLON
   16                | error SEMICOLON
   17                | statement error

   18 statement: var ASSIGN expression
   19          | IF boolExpression THEN statementzWsemi ENDIF
   20          | IF boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF
   21          | WHILE boolExpression BEGINLOOP statementzWsemi ENDLOOP
   22          | DO BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression
   23          | READ varzWcomma
   24          | WRITE varzWcomma
   25          | RETURN expression

   26 boolExpression: relationAndExpression
   27               | relationAndExpression OR boolExpression

   28 relationAndExpression: relationExpression
   29                      | relationExpression AND relationAndExpression

   30 relationExpression: expression comp expression
   31                   | NOT expression comp expression
   32                   | TRUE
   33                   | NOT TRUE
   34                   | FALSE
   35                   | NOT FALSE
   36                   | L_PAREN boolExpression R_PAREN
   37                   | NOT L_PAREN boolExpression R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expressionzWcomma: %empty
   45                  | expression
   46                  | expression expressionCommaChain

   47 expressionCommaChain: COMMA expression expressionCommaChain
   48                     | COMMA expression

   49 expression: multiplicativeExpression
   50           | multiplicativeExpression ADD expression
   51           | multiplicativeExpression SUB expression

   52 multiplicativeExpression: term
   53                         | term MOD multiplicativeExpression
   54                         | term DIV multiplicativeExpression
   55                         | term MULT multiplicativeExpression

   56 term: var
   57     | SUB var
   58     | NUMBER
   59     | SUB NUMBER
   60     | L_PAREN expression R_PAREN
   61     | SUB L_PAREN expression R_PAREN
   62     | IDENT L_PAREN expressionzWcomma R_PAREN

   63 varzWcomma: var COMMA varzWcomma
   64           | var

   65 var: IDENT
   66    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 5 8 9 16 17
FUNCTION (258) 4 5
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 10 11
ARRAY (266) 10
OF (267) 10
IF (268) 19 20
THEN (269) 19 20
ENDIF (270) 19 20
ELSE (271) 20
WHILE (272) 21 22
DO (273) 22
BEGINLOOP (274) 21 22
ENDLOOP (275) 21 22
CONTINUE (276)
READ (277) 23
WRITE (278) 24
AND (279) 29
OR (280) 27
NOT (281) 31 33 35 37
TRUE (282) 32 33
FALSE (283) 34 35
RETURN (284) 25
SUB (285) 51 57 59 61
ADD (286) 50
MULT (287) 55
DIV (288) 54
MOD (289) 53
EQ (290) 38
NEQ (291) 39
LT (292) 40
GT (293) 41
LTE (294) 42
GTE (295) 43
IDENT (296) 4 12 13 62 65 66
NUMBER (297) 10 58 59
SEMICOLON (298) 4 7 8 14 15 16
COLON (299) 10 11
COMMA (300) 12 47 48 63
L_PAREN (301) 36 37 60 61 62
R_PAREN (302) 36 37 60 61 62
L_SQUARE_BRACKET (303) 10 66
R_SQUARE_BRACKET (304) 10 66
ASSIGN (305) 18
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
program (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4 5, on right: 3
declarationsWsemi (56)
    on left: 6 7 8 9, on right: 4 7 9
declaration (57)
    on left: 10 11, on right: 7 9
idents (58)
    on left: 12 13, on right: 10 11 12
statementzWsemi (59)
    on left: 14 15 16 17, on right: 4 14 19 20 21 22
statement (60)
    on left: 18 19 20 21 22 23 24 25, on right: 14 15 17
boolExpression (61)
    on left: 26 27, on right: 19 20 21 22 27 36 37
relationAndExpression (62)
    on left: 28 29, on right: 26 27 29
relationExpression (63)
    on left: 30 31 32 33 34 35 36 37, on right: 28 29
comp (64)
    on left: 38 39 40 41 42 43, on right: 30 31
expressionzWcomma (65)
    on left: 44 45 46, on right: 62
expressionCommaChain (66)
    on left: 47 48, on right: 46 47
expression (67)
    on left: 49 50 51, on right: 18 25 30 31 45 46 47 48 50 51 60 61
    66
multiplicativeExpression (68)
    on left: 52 53 54 55, on right: 49 50 51 53 54 55
term (69)
    on left: 56 57 58 59 60 61 62, on right: 52 53 54 55
varzWcomma (70)
    on left: 63 64, on right: 23 24 63
var (71)
    on left: 65 66, on right: 18 56 57 63 64


State 0

    0 $accept: . prog_start "end of file"

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    prog_start  go to state 2
    program     go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY
    5         | FUNCTION . error

    error  shift, and go to state 5
    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . "end of file"

    "end of file"  shift, and go to state 7


State 3

    1 prog_start: program .

    $default  reduce using rule 1 (prog_start)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 8
    function  go to state 4


State 5

    5 function: FUNCTION error .

    $default  reduce using rule 5 (function)


State 6

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start "end of file" .

    $default  accept


State 8

    3 program: function program .

    $default  reduce using rule 3 (program)


State 9

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 13
    declaration        go to state 14
    idents             go to state 15


State 11

    8 declarationsWsemi: error . SEMICOLON

    SEMICOLON  shift, and go to state 16


State 12

   12 idents: IDENT . COMMA idents
   13       | IDENT .

    COMMA  shift, and go to state 17

    $default  reduce using rule 13 (idents)


State 13

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi . END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_PARAMS  shift, and go to state 18


State 14

    7 declarationsWsemi: declaration . SEMICOLON declarationsWsemi
    9                  | declaration . error declarationsWsemi

    error      shift, and go to state 19
    SEMICOLON  shift, and go to state 20


State 15

   10 declaration: idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | idents . COLON INTEGER

    COLON  shift, and go to state 21


State 16

    8 declarationsWsemi: error SEMICOLON .

    $default  reduce using rule 8 (declarationsWsemi)


State 17

   12 idents: IDENT COMMA . idents

    IDENT  shift, and go to state 12

    idents  go to state 22


State 18

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS . BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    BEGIN_LOCALS  shift, and go to state 23


State 19

    9 declarationsWsemi: declaration error . declarationsWsemi

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarationsWsemi)
    END_LOCALS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 24
    declaration        go to state 14
    idents             go to state 15


State 20

    7 declarationsWsemi: declaration SEMICOLON . declarationsWsemi

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_PARAMS  reduce using rule 6 (declarationsWsemi)
    END_LOCALS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 25
    declaration        go to state 14
    idents             go to state 15


State 21

   10 declaration: idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   11            | idents COLON . INTEGER

    INTEGER  shift, and go to state 26
    ARRAY    shift, and go to state 27


State 22

   12 idents: IDENT COMMA idents .

    $default  reduce using rule 12 (idents)


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS . declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    error  shift, and go to state 11
    IDENT  shift, and go to state 12

    END_LOCALS  reduce using rule 6 (declarationsWsemi)

    declarationsWsemi  go to state 28
    declaration        go to state 14
    idents             go to state 15


State 24

    9 declarationsWsemi: declaration error declarationsWsemi .

    $default  reduce using rule 9 (declarationsWsemi)


State 25

    7 declarationsWsemi: declaration SEMICOLON declarationsWsemi .

    $default  reduce using rule 7 (declarationsWsemi)


State 26

   11 declaration: idents COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 27

   10 declaration: idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi . END_LOCALS BEGIN_BODY statementzWsemi END_BODY

    END_LOCALS  shift, and go to state 30


State 29

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 31


State 30

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS . BEGIN_BODY statementzWsemi END_BODY

    BEGIN_BODY  shift, and go to state 32


State 31

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 33


State 32

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY . statementzWsemi END_BODY

    error   shift, and go to state 34
    IF      shift, and go to state 35
    WHILE   shift, and go to state 36
    DO      shift, and go to state 37
    READ    shift, and go to state 38
    WRITE   shift, and go to state 39
    RETURN  shift, and go to state 40
    IDENT   shift, and go to state 41

    statementzWsemi  go to state 42
    statement        go to state 43
    var              go to state 44


State 33

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 45


State 34

   16 statementzWsemi: error . SEMICOLON

    SEMICOLON  shift, and go to state 46


State 35

   19 statement: IF . boolExpression THEN statementzWsemi ENDIF
   20          | IF . boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 53

    boolExpression            go to state 54
    relationAndExpression     go to state 55
    relationExpression        go to state 56
    expression                go to state 57
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 36

   21 statement: WHILE . boolExpression BEGINLOOP statementzWsemi ENDLOOP

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 53

    boolExpression            go to state 61
    relationAndExpression     go to state 55
    relationExpression        go to state 56
    expression                go to state 57
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 37

   22 statement: DO . BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression

    BEGINLOOP  shift, and go to state 62


State 38

   23 statement: READ . varzWcomma

    IDENT  shift, and go to state 41

    varzWcomma  go to state 63
    var         go to state 64


State 39

   24 statement: WRITE . varzWcomma

    IDENT  shift, and go to state 41

    varzWcomma  go to state 65
    var         go to state 64


State 40

   25 statement: RETURN . expression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 67
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 41

   65 var: IDENT .
   66    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 65 (var)


State 42

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi . END_BODY

    END_BODY  shift, and go to state 69


State 43

   14 statementzWsemi: statement . SEMICOLON statementzWsemi
   15                | statement . SEMICOLON
   17                | statement . error

    error      shift, and go to state 70
    SEMICOLON  shift, and go to state 71


State 44

   18 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 72


State 45

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 73


State 46

   16 statementzWsemi: error SEMICOLON .

    $default  reduce using rule 16 (statementzWsemi)


State 47

   31 relationExpression: NOT . expression comp expression
   33                   | NOT . TRUE
   35                   | NOT . FALSE
   37                   | NOT . L_PAREN boolExpression R_PAREN

    TRUE     shift, and go to state 74
    FALSE    shift, and go to state 75
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 76

    expression                go to state 77
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 48

   32 relationExpression: TRUE .

    $default  reduce using rule 32 (relationExpression)


State 49

   34 relationExpression: FALSE .

    $default  reduce using rule 34 (relationExpression)


State 50

   57 term: SUB . var
   59     | SUB . NUMBER
   61     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 41
    NUMBER   shift, and go to state 78
    L_PAREN  shift, and go to state 79

    var  go to state 80


State 51

   62 term: IDENT . L_PAREN expressionzWcomma R_PAREN
   65 var: IDENT .
   66    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 81
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 65 (var)


State 52

   58 term: NUMBER .

    $default  reduce using rule 58 (term)


State 53

   36 relationExpression: L_PAREN . boolExpression R_PAREN
   60 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 53

    boolExpression            go to state 82
    relationAndExpression     go to state 55
    relationExpression        go to state 56
    expression                go to state 83
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 54

   19 statement: IF boolExpression . THEN statementzWsemi ENDIF
   20          | IF boolExpression . THEN statementzWsemi ELSE statementzWsemi ENDIF

    THEN  shift, and go to state 84


State 55

   26 boolExpression: relationAndExpression .
   27               | relationAndExpression . OR boolExpression

    OR  shift, and go to state 85

    $default  reduce using rule 26 (boolExpression)


State 56

   28 relationAndExpression: relationExpression .
   29                      | relationExpression . AND relationAndExpression

    AND  shift, and go to state 86

    $default  reduce using rule 28 (relationAndExpression)


State 57

   30 relationExpression: expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 93


State 58

   49 expression: multiplicativeExpression .
   50           | multiplicativeExpression . ADD expression
   51           | multiplicativeExpression . SUB expression

    SUB  shift, and go to state 94
    ADD  shift, and go to state 95

    $default  reduce using rule 49 (expression)


State 59

   52 multiplicativeExpression: term .
   53                         | term . MOD multiplicativeExpression
   54                         | term . DIV multiplicativeExpression
   55                         | term . MULT multiplicativeExpression

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 52 (multiplicativeExpression)


State 60

   56 term: var .

    $default  reduce using rule 56 (term)


State 61

   21 statement: WHILE boolExpression . BEGINLOOP statementzWsemi ENDLOOP

    BEGINLOOP  shift, and go to state 99


State 62

   22 statement: DO BEGINLOOP . statementzWsemi ENDLOOP WHILE boolExpression

    error   shift, and go to state 34
    IF      shift, and go to state 35
    WHILE   shift, and go to state 36
    DO      shift, and go to state 37
    READ    shift, and go to state 38
    WRITE   shift, and go to state 39
    RETURN  shift, and go to state 40
    IDENT   shift, and go to state 41

    statementzWsemi  go to state 100
    statement        go to state 43
    var              go to state 44


State 63

   23 statement: READ varzWcomma .

    $default  reduce using rule 23 (statement)


State 64

   63 varzWcomma: var . COMMA varzWcomma
   64           | var .

    COMMA  shift, and go to state 101

    $default  reduce using rule 64 (varzWcomma)


State 65

   24 statement: WRITE varzWcomma .

    $default  reduce using rule 24 (statement)


State 66

   60 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 102
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 67

   25 statement: RETURN expression .

    $default  reduce using rule 25 (statement)


State 68

   66 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 103
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 69

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarationsWsemi END_PARAMS BEGIN_LOCALS declarationsWsemi END_LOCALS BEGIN_BODY statementzWsemi END_BODY .

    $default  reduce using rule 4 (function)


State 70

   17 statementzWsemi: statement error .

    $default  reduce using rule 17 (statementzWsemi)


State 71

   14 statementzWsemi: statement SEMICOLON . statementzWsemi
   15                | statement SEMICOLON .

    error   shift, and go to state 34
    IF      shift, and go to state 35
    WHILE   shift, and go to state 36
    DO      shift, and go to state 37
    READ    shift, and go to state 38
    WRITE   shift, and go to state 39
    RETURN  shift, and go to state 40
    IDENT   shift, and go to state 41

    END_BODY  reduce using rule 15 (statementzWsemi)
    ENDIF     reduce using rule 15 (statementzWsemi)
    ELSE      reduce using rule 15 (statementzWsemi)
    ENDLOOP   reduce using rule 15 (statementzWsemi)

    statementzWsemi  go to state 104
    statement        go to state 43
    var              go to state 44


State 72

   18 statement: var ASSIGN . expression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 105
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 73

   10 declaration: idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 74

   33 relationExpression: NOT TRUE .

    $default  reduce using rule 33 (relationExpression)


State 75

   35 relationExpression: NOT FALSE .

    $default  reduce using rule 35 (relationExpression)


State 76

   37 relationExpression: NOT L_PAREN . boolExpression R_PAREN
   60 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 53

    boolExpression            go to state 106
    relationAndExpression     go to state 55
    relationExpression        go to state 56
    expression                go to state 83
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 77

   31 relationExpression: NOT expression . comp expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    comp  go to state 107


State 78

   59 term: SUB NUMBER .

    $default  reduce using rule 59 (term)


State 79

   61 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 108
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 80

   57 term: SUB var .

    $default  reduce using rule 57 (term)


State 81

   62 term: IDENT L_PAREN . expressionzWcomma R_PAREN

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    $default  reduce using rule 44 (expressionzWcomma)

    expressionzWcomma         go to state 109
    expression                go to state 110
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 82

   36 relationExpression: L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 111


State 83

   30 relationExpression: expression . comp expression
   60 term: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 87
    NEQ      shift, and go to state 88
    LT       shift, and go to state 89
    GT       shift, and go to state 90
    LTE      shift, and go to state 91
    GTE      shift, and go to state 92
    R_PAREN  shift, and go to state 112

    comp  go to state 93


State 84

   19 statement: IF boolExpression THEN . statementzWsemi ENDIF
   20          | IF boolExpression THEN . statementzWsemi ELSE statementzWsemi ENDIF

    error   shift, and go to state 34
    IF      shift, and go to state 35
    WHILE   shift, and go to state 36
    DO      shift, and go to state 37
    READ    shift, and go to state 38
    WRITE   shift, and go to state 39
    RETURN  shift, and go to state 40
    IDENT   shift, and go to state 41

    statementzWsemi  go to state 113
    statement        go to state 43
    var              go to state 44


State 85

   27 boolExpression: relationAndExpression OR . boolExpression

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 53

    boolExpression            go to state 114
    relationAndExpression     go to state 55
    relationExpression        go to state 56
    expression                go to state 57
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 86

   29 relationAndExpression: relationExpression AND . relationAndExpression

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 53

    relationAndExpression     go to state 115
    relationExpression        go to state 56
    expression                go to state 57
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 87

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 88

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 89

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 90

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 91

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 92

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 93

   30 relationExpression: expression comp . expression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 116
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 94

   51 expression: multiplicativeExpression SUB . expression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 117
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 95

   50 expression: multiplicativeExpression ADD . expression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 118
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 96

   55 multiplicativeExpression: term MULT . multiplicativeExpression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    multiplicativeExpression  go to state 119
    term                      go to state 59
    var                       go to state 60


State 97

   54 multiplicativeExpression: term DIV . multiplicativeExpression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    multiplicativeExpression  go to state 120
    term                      go to state 59
    var                       go to state 60


State 98

   53 multiplicativeExpression: term MOD . multiplicativeExpression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    multiplicativeExpression  go to state 121
    term                      go to state 59
    var                       go to state 60


State 99

   21 statement: WHILE boolExpression BEGINLOOP . statementzWsemi ENDLOOP

    error   shift, and go to state 34
    IF      shift, and go to state 35
    WHILE   shift, and go to state 36
    DO      shift, and go to state 37
    READ    shift, and go to state 38
    WRITE   shift, and go to state 39
    RETURN  shift, and go to state 40
    IDENT   shift, and go to state 41

    statementzWsemi  go to state 122
    statement        go to state 43
    var              go to state 44


State 100

   22 statement: DO BEGINLOOP statementzWsemi . ENDLOOP WHILE boolExpression

    ENDLOOP  shift, and go to state 123


State 101

   63 varzWcomma: var COMMA . varzWcomma

    IDENT  shift, and go to state 41

    varzWcomma  go to state 124
    var         go to state 64


State 102

   60 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112


State 103

   66 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 125


State 104

   14 statementzWsemi: statement SEMICOLON statementzWsemi .

    $default  reduce using rule 14 (statementzWsemi)


State 105

   18 statement: var ASSIGN expression .

    $default  reduce using rule 18 (statement)


State 106

   37 relationExpression: NOT L_PAREN boolExpression . R_PAREN

    R_PAREN  shift, and go to state 126


State 107

   31 relationExpression: NOT expression comp . expression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 127
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 108

   61 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 128


State 109

   62 term: IDENT L_PAREN expressionzWcomma . R_PAREN

    R_PAREN  shift, and go to state 129


State 110

   45 expressionzWcomma: expression .
   46                  | expression . expressionCommaChain

    COMMA  shift, and go to state 130

    $default  reduce using rule 45 (expressionzWcomma)

    expressionCommaChain  go to state 131


State 111

   36 relationExpression: L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 36 (relationExpression)


State 112

   60 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 60 (term)


State 113

   19 statement: IF boolExpression THEN statementzWsemi . ENDIF
   20          | IF boolExpression THEN statementzWsemi . ELSE statementzWsemi ENDIF

    ENDIF  shift, and go to state 132
    ELSE   shift, and go to state 133


State 114

   27 boolExpression: relationAndExpression OR boolExpression .

    $default  reduce using rule 27 (boolExpression)


State 115

   29 relationAndExpression: relationExpression AND relationAndExpression .

    $default  reduce using rule 29 (relationAndExpression)


State 116

   30 relationExpression: expression comp expression .

    $default  reduce using rule 30 (relationExpression)


State 117

   51 expression: multiplicativeExpression SUB expression .

    $default  reduce using rule 51 (expression)


State 118

   50 expression: multiplicativeExpression ADD expression .

    $default  reduce using rule 50 (expression)


State 119

   55 multiplicativeExpression: term MULT multiplicativeExpression .

    $default  reduce using rule 55 (multiplicativeExpression)


State 120

   54 multiplicativeExpression: term DIV multiplicativeExpression .

    $default  reduce using rule 54 (multiplicativeExpression)


State 121

   53 multiplicativeExpression: term MOD multiplicativeExpression .

    $default  reduce using rule 53 (multiplicativeExpression)


State 122

   21 statement: WHILE boolExpression BEGINLOOP statementzWsemi . ENDLOOP

    ENDLOOP  shift, and go to state 134


State 123

   22 statement: DO BEGINLOOP statementzWsemi ENDLOOP . WHILE boolExpression

    WHILE  shift, and go to state 135


State 124

   63 varzWcomma: var COMMA varzWcomma .

    $default  reduce using rule 63 (varzWcomma)


State 125

   66 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 66 (var)


State 126

   37 relationExpression: NOT L_PAREN boolExpression R_PAREN .

    $default  reduce using rule 37 (relationExpression)


State 127

   31 relationExpression: NOT expression comp expression .

    $default  reduce using rule 31 (relationExpression)


State 128

   61 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 61 (term)


State 129

   62 term: IDENT L_PAREN expressionzWcomma R_PAREN .

    $default  reduce using rule 62 (term)


State 130

   47 expressionCommaChain: COMMA . expression expressionCommaChain
   48                     | COMMA . expression

    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 66

    expression                go to state 136
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 131

   46 expressionzWcomma: expression expressionCommaChain .

    $default  reduce using rule 46 (expressionzWcomma)


State 132

   19 statement: IF boolExpression THEN statementzWsemi ENDIF .

    $default  reduce using rule 19 (statement)


State 133

   20 statement: IF boolExpression THEN statementzWsemi ELSE . statementzWsemi ENDIF

    error   shift, and go to state 34
    IF      shift, and go to state 35
    WHILE   shift, and go to state 36
    DO      shift, and go to state 37
    READ    shift, and go to state 38
    WRITE   shift, and go to state 39
    RETURN  shift, and go to state 40
    IDENT   shift, and go to state 41

    statementzWsemi  go to state 137
    statement        go to state 43
    var              go to state 44


State 134

   21 statement: WHILE boolExpression BEGINLOOP statementzWsemi ENDLOOP .

    $default  reduce using rule 21 (statement)


State 135

   22 statement: DO BEGINLOOP statementzWsemi ENDLOOP WHILE . boolExpression

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 51
    NUMBER   shift, and go to state 52
    L_PAREN  shift, and go to state 53

    boolExpression            go to state 138
    relationAndExpression     go to state 55
    relationExpression        go to state 56
    expression                go to state 57
    multiplicativeExpression  go to state 58
    term                      go to state 59
    var                       go to state 60


State 136

   47 expressionCommaChain: COMMA expression . expressionCommaChain
   48                     | COMMA expression .

    COMMA  shift, and go to state 130

    $default  reduce using rule 48 (expressionCommaChain)

    expressionCommaChain  go to state 139


State 137

   20 statement: IF boolExpression THEN statementzWsemi ELSE statementzWsemi . ENDIF

    ENDIF  shift, and go to state 140


State 138

   22 statement: DO BEGINLOOP statementzWsemi ENDLOOP WHILE boolExpression .

    $default  reduce using rule 22 (statement)


State 139

   47 expressionCommaChain: COMMA expression expressionCommaChain .

    $default  reduce using rule 47 (expressionCommaChain)


State 140

   20 statement: IF boolExpression THEN statementzWsemi ELSE statementzWsemi ENDIF .

    $default  reduce using rule 20 (statement)
